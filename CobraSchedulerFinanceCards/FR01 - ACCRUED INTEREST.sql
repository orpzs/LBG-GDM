/************************************************************************/
/*JOB:      FR01 - ACCRUED INTEREST                                     */
/*VERSION:  FR01v10 - REPOINT OLD FR17 STEPS TO DAILY TABLES            */
/*DATE VERSION IMPLEMENTED: 2020-07-02                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*FR14                                                                  */
/*FR15D                                                                 */
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: CHECK PRIOR JOBS FOR COMPLETION*/

/*INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;


/*INITIAL CHECKS TO SEE IF FR15 IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR15D';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF FR14 IS SUCCESSFUL - ENSURE FEATURES ARE OK*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR14';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF C01J15 IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J15';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF THIS JOB HAS ALREADY RUN SUCCESSFULLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR01';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'FR01'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/*STEP 02: UPDATE DATE PARAMETER TABLE*/

/*
CREATE SET TABLE CC_COBRA.WK_FR01_REPORT_DATE ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      REPORT_DT DATE FORMAT 'YY/MM/DD')
UNIQUE PRIMARY INDEX ( REPORT_DT );
*/

UPDATE CC_COBRA.WK_FR01_REPORT_DATE
SET REPORT_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT);         
;

COLLECT STATS ON CC_COBRA.WK_FR01_REPORT_DATE INDEX(REPORT_DT);

/*DISPLAY DATE INSERTED ABOVE FOR OUTPUT*/

SELECT * FROM CC_COBRA.WK_FR01_REPORT_DATE;

/*STEP 02A: COLLATE DATA REQUIRED FOR NEXT STEP IN STAGING TABLE*/

/*
CREATE TABLE CC_COBRA.WK_FR01_ACCRUED_INTEREST (
AGRMNT_ID INT
,FEATUR_ID INT
,REPORT_DT DATE
,ORG_TX CHAR(3)
,CREDIT_CARD_LOGO_CD SMALLINT
,BILLNG_CYCLE_NO SMALLINT
,PLAN_NO INT
,ACCRUED_INT DECIMAL(15,2)
) PRIMARY INDEX(AGRMNT_ID);
*/

DELETE FROM CC_COBRA.WK_FR01_ACCRUED_INTEREST ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

INSERT INTO CC_COBRA.WK_FR01_ACCRUED_INTEREST
SELECT 
T1.AGRMNT_ID
,T1.FEATUR_ID
,RD.REPORT_DT
,T2.ORG_TX
,T2.CREDIT_CARD_LOGO_CD
,T2.BILLNG_CYCLE_NO
,T1.PLAN_NO
,T1.ACCRUED_INT_AM

FROM CC_COBRA.CC_ACCOUNT_FEATURE_DAILY T1 
JOIN CC_COBRA.WK_FR01_REPORT_DATE RD
ON   RD.REPORT_DT = T1.REPORT_DT	
JOIN GDW_VIEWS.CREDIT_CARD_AGREEMENT T2 
ON T1.AGRMNT_ID = T2.AGRMNT_ID 
AND RD.REPORT_DT BETWEEN T2.SOURCE_START_DT AND T2.SOURCE_END_DT - 1  
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.WK_FR01_ACCRUED_INTEREST INDEX(AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 03: PRE-DELETE ANY DATA MATCHING PROCESSING DATE - WITH BALANCE WALK TYPE*/

/*
CREATE SET TABLE CC_COBRA.FR01_ACCRUED_INTEREST_BW ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      REPORT_MTH DATE FORMAT 'YYYY-MM-DD',
      REPORT_DT DATE FORMAT 'YYYY-MM-DD',
      ORG_TX CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC ,
      V_ORG CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('120','190','195','170', NULL),
      LOGO SMALLINT ,
      BALANC_TYPE_CD CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('ZZZZZZ','ISTAT','NEW','RIBB','RNIBB','CIBB','RIMPRD','BIBB','CIMPRD','RHRDSP','CHRDSP'),
      BILLING_CYCLE_NO SMALLINT ,
      PART_NO SMALLINT ,
      PART_DESC CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS('RETAIL','CASH','BT'),
      ACCRUED_INTEREST DECIMAL(15,2) COMPRESS 0)
PRIMARY INDEX ( REPORT_DT ,ORG_TX , LOGO ,BILLING_CYCLE_NO ,PART_NO );    

*/

DELETE FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW
WHERE REPORT_DT IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE);

/*INSERT DATA INTO FINAL TABLE*/
INSERT INTO CC_COBRA.FR01_ACCRUED_INTEREST_BW
SELECT 
CAST(((T1.REPORT_DT/100*100)+1) AS DATE)
,T1.REPORT_DT
,T1.ORG_TX
,CREDIT_CARD_LOGO_CD AS LOGO
,COALESCE (LU.BALANC_TYPE_CD, 'NEW')  --JAYNE 2017-11-25.
--,COALESCE (LU.MIA_BALANC_TYPE_CD, 'NEW')  --EYNON 2017-11-09.
--,COALESCE(LU.PREV_BALANC_TYPE_CD, 'NEW')  --CHANGE JM 2017-05-19
--,COALESCE(T6.BALANC_TYPE_CD, 'NEW')
,T1.BILLNG_CYCLE_NO
,CASE WHEN T1.PLAN_NO IN (10002,10003,10004,10005,10006) THEN 1
      WHEN T1.PLAN_NO >= 30000 OR T1.PLAN_NO BETWEEN 20000 AND 24999 THEN 1
      WHEN T1.PLAN_NO = 10001 THEN 2
      WHEN T1.PLAN_NO BETWEEN 15000 AND 19999 OR T1.PLAN_NO BETWEEN 25000 AND 29999 THEN 3
      ELSE NULL
      END AS PART_NO
,CASE WHEN T1.PLAN_NO IN (10002,10003,10004,10005,10006) THEN 'RETAIL'	
      WHEN T1.PLAN_NO >= 30000 OR T1.PLAN_NO BETWEEN 20000 AND 24999 THEN 'RETAIL'	
      WHEN T1.PLAN_NO = 10001 THEN 'CASH'	
      WHEN T1.PLAN_NO BETWEEN 15000 AND 19999 OR T1.PLAN_NO BETWEEN 25000 AND 29999 THEN 'BT'
      ELSE NULL
      END AS PART_DESC
,SUM(T1.ACCRUED_INT) AS ACCRUED_INT

FROM CC_COBRA.WK_FR01_ACCRUED_INTEREST T1
LEFT JOIN CC_COBRA.FR15_AGRMNT_FEATUR_PLAN_TYPE T6
ON T1.AGRMNT_ID = T6.AGRMNT_ID  
AND T1.FEATUR_ID = T6.FEATUR_ID  
AND T1.REPORT_DT BETWEEN T6.SOURCE_START_DT AND T6.SOURCE_END_DT - 1
LEFT JOIN CC_COBRA.FR15_BALANC_TYPE_CD_LOOKUP LU --CHANGE JM 2017-05-19
ON T6.NEW_BALANC_TYPE_CD = LU.BALANC_TYPE_CD
GROUP BY 1,2,3,4,5,6,7,8;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.FR01_ACCRUED_INTEREST_BW INDEX (REPORT_DT, ORG_TX, LOGO, BILLING_CYCLE_NO, PART_NO);
COLLECT STATS ON CC_COBRA.FR01_ACCRUED_INTEREST_BW COLUMN(REPORT_DT);

/*STEP 04: REMOVED AGG TABLE*/

/*STEP 06: CLEAR WORK TABLE*/

DELETE FROM CC_COBRA.WK_FR01_ACCRUED_INTEREST ALL;

/*STEP 07: ACCRUED INTEREST CONVERSION*/

/*INITIAL CHECKS TO SEE IF FR15 IS SUCCESSFUL AND HAS BEEN UPDATED (FIRST WORKING DAY) */
/*THIS PROCESSES THE PRIOR MONTH ONLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR15';

.IF ACTIVITYCOUNT = 0 THEN .GOTO SKIPTOEND;


/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'FR01C'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/*
CREATE SET TABLE CC_COBRA.WK_FR01_REPORT_DATE_R2 ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO
     (
      REPORT_DT DATE FORMAT 'YYYY-MM-DD',
      NM_REPORT_DT DATE FORMAT 'YYYY-MM-DD',
      RD_BUS_DT DATE FORMAT 'YYYY-MM-DD')
UNIQUE PRIMARY INDEX ( REPORT_DT );
*/

/*UPDATE THIS DATE TO BE THE PRIOR MONTH END FOR THIS SECTION OF THE REPORT*/

/*UPDATE REPORT_DT - THIS WILL BE THE LATEST MONTH END THAT HAS COMPLETED DATA FOR FR17*/

UPDATE CC_COBRA.WK_FR01_REPORT_DATE_R2
SET REPORT_DT = (
SELECT CURRENT_BUS_DT-EXTRACT(DAY FROM CURRENT_BUS_DT) FROM CC_COBRA.CC_COBRA_LOAD_LOG
WHERE GRID_LOAD_ID = 'FR15'
)
;

/*UPDATE NM_REPORT_DT THIS IS THE MONTH END THAT HAS JUST COMPLETED*/

UPDATE CC_COBRA.WK_FR01_REPORT_DATE_R2
SET NM_REPORT_DT = (SELECT ADD_MONTHS(REPORT_DT+1,1)-1 FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
;

/*THIS HOLDS THE LAST WORKING DAY OF THE REPORT_DT*/

UPDATE CC_COBRA.WK_FR01_REPORT_DATE_R2
FROM (SELECT MAX(CALENDAR_DATE) AS MAX_DT
      FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 R2
      JOIN CC_COBRA.GRID_REPORTS_CONTROL RC
      ON   R2.REPORT_DT/100 = RC.CALENDAR_DATE/100) T1
      
SET RD_BUS_DT = T1.MAX_DT
;

COLLECT STATS ON CC_COBRA.WK_FR01_REPORT_DATE_R2 INDEX ( REPORT_DT );
COLLECT STATS ON CC_COBRA.WK_FR01_REPORT_DATE_R2 COLUMN ( NM_REPORT_DT );
COLLECT STATS ON CC_COBRA.WK_FR01_REPORT_DATE_R2 COLUMN ( RD_BUS_DT );


SELECT * FROM CC_COBRA.WK_FR01_REPORT_DATE_R2;

/*STEP 08: COLLECT DATA FOR CONVERSION OF ACCRUED INTEREST*/

/*
CREATE TABLE CC_COBRA.WK_FR01_ACC_INT_BW_CONV (
ORG_TX CHAR(3)
,AGRMNT_ID INT
,FEATUR_ID INT
,CREDIT_CARD_LOGO_CD SMALLINT
,BILLNG_CYCLE_NO SMALLINT
,REPORT_DT DATE
,AGRMNT_FEATUR_AM DECIMAL(15,2)
) PRIMARY INDEX(AGRMNT_ID);
*/


DELETE FROM CC_COBRA.WK_FR01_ACC_INT_BW_CONV ALL;

INSERT INTO CC_COBRA.WK_FR01_ACC_INT_BW_CONV
SEL   A.ORG_TX
      ,A.AGRMNT_ID
      ,T1.FEATUR_ID
      ,A.CREDIT_CARD_LOGO_CD
      ,AD.BILLNG_CYCLE_NO
      ,R.REPORT_DT 
      ,T1.ACCRUED_INT_AM

FROM   CC_COBRA.CC_AGREEMENT_ADDED_DATE A
JOIN   CC_COBRA.WK_FR01_REPORT_DATE_R2 R
ON     A.PURGED_DT IS NULL OR A.PURGED_DT > R.REPORT_DT
JOIN   CC_COBRA.CC_ACCOUNT_DAILY AD
ON     A.AGRMNT_ID = AD.AGRMNT_ID
AND    R.RD_BUS_DT = AD.REPORT_DT
JOIN   CC_COBRA.CC_ACCOUNT_FEATURE_DAILY  T1 
ON     A.AGRMNT_ID = T1.AGRMNT_ID
AND     R.RD_BUS_DT = T1.REPORT_DT
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.WK_FR01_ACC_INT_BW_CONV INDEX(AGRMNT_ID);

/*
CREATE SET TABLE CC_COBRA.FR01_ACC_INT_BW_CONV ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      ORG_TX CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
      BILLNG_CYCLE_NO SMALLINT,
      LOGO SMALLINT,
      PERIOD_END_DT DATE FORMAT 'YYYY-MM-DD',
      BALANC_TYPE_CD CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
      NM_BALANC_TYPE_CD CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
      ACCRUED_INT_AM DECIMAL(15,2),
      VOLUME INTEGER)
UNIQUE PRIMARY INDEX ( ORG_TX, V_ORG, BILLNG_CYCLE_NO ,LOGO ,PERIOD_END_DT ,
BALANC_TYPE_CD ,NM_BALANC_TYPE_CD );
*/

DELETE FROM CC_COBRA.FR01_ACC_INT_BW_CONV WHERE PERIOD_END_DT IN (
SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2);

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV
SEL   A.ORG_TX
      ,A.BILLNG_CYCLE_NO
      ,A.CREDIT_CARD_LOGO_CD
      ,A.REPORT_DT 
      ,LU.BALANC_TYPE_CD 
      ,COALESCE(LU2.BALANC_TYPE_CD, 'PURGED') AS NM_BALANC_TYPE_CD 
      ,SUM(A.AGRMNT_FEATUR_AM)
      ,COUNT(*) AS VOLUME
FROM   CC_COBRA.WK_FR01_ACC_INT_BW_CONV A
CROSS JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 R2
JOIN   CC_COBRA.FR15_AGRMNT_FEATUR_PLAN_TYPE L
ON     A.AGRMNT_ID = L.AGRMNT_ID
AND    A.FEATUR_ID = L.FEATUR_ID
AND    A.REPORT_DT BETWEEN L.SOURCE_START_DT AND L.SOURCE_END_DT-1
JOIN   CC_COBRA.FR15_BALANC_TYPE_CD_LOOKUP LU  --CHANGE JM 2017-05-19
ON     L.NEW_BALANC_TYPE_CD = LU.BALANC_TYPE_CD
LEFT JOIN CC_COBRA.FR15_AGRMNT_FEATUR_PLAN_TYPE L2  
ON     A.AGRMNT_ID = L2.AGRMNT_ID
AND    A.FEATUR_ID = L2.FEATUR_ID
AND    R2.NM_REPORT_DT BETWEEN L2.SOURCE_START_DT AND L2.SOURCE_END_DT-1
LEFT JOIN   CC_COBRA.FR15_BALANC_TYPE_CD_LOOKUP LU2  --CHANGE JM 2017-05-19
ON     L2.NEW_BALANC_TYPE_CD = LU2.BALANC_TYPE_CD
GROUP BY 1,2,3,4,5,6;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


COLLECT STATS ON CC_COBRA.FR01_ACC_INT_BW_CONV 
INDEX ( ORG_TX, BILLNG_CYCLE_NO ,LOGO ,PERIOD_END_DT ,
BALANC_TYPE_CD ,NM_BALANC_TYPE_CD );

/*
CREATE TABLE CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP  (
BALANC_TYPE_CD CHAR(6)
,IBB_FLAG CHAR(1)
,NM_IBB_FLAG CHAR(1)
) UNIQUE PRIMARY INDEX(BALANC_TYPE_CD);
delete from CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP  all;
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BHRDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BIMPRD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BZIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BXIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BXIMPD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'BXHDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'CHRDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'CIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'CIMPRD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IHRDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IIMPRD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IZIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IXIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IXIMPD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'IXHDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MHRDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MIMPRD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MZIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MXIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MXIMPD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'MXHDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'PHRDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'PIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'PIMPRD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'PZIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'RHRDSP', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'RIBB', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'RIMPRD', 'Y', 'Y';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'RNIBB', 'N', 'N';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'ZZZZZZ', 'N', 'N';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'PURGED', 'Y', 'N';
INSERT INTO CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP SELECT 'ISTAT', 'N', 'Y';

COLLECT STATS ON CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP INDEX(BALANC_TYPE_CD);
*/


/*STEP 09: COLLECT AGGREGATE DATA FOR REPORT - ACTUALS ONLY*/
/*
CREATE SET TABLE CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      ORG_TX CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
      PERIOD_END_DT DATE FORMAT 'YYYY-MM-DD',
      REC_TYPE CHAR(1),
      IBB_ACCRUED_INT_AM DECIMAL(15,2),
      IBB_ACCRUED_CONV_INT_AM DECIMAL(15,2),
      IBB_ACCRUED_CONV_INT_PC DECIMAL(12,9),
      NIBB_ACCRUED_INT_AM DECIMAL(15,2),
      NIBB_ACCRUED_CONV_INT_AM DECIMAL(15,2),
      NIBB_ACCRUED_CONV_INT_PC DECIMAL(12,9)
      
      )
UNIQUE PRIMARY INDEX ( ORG_TX ,PERIOD_END_DT,REC_TYPE );
*/

DELETE FROM CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT 
WHERE PERIOD_END_DT IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND REC_TYPE = 'A' ; --ACTUALS ONLY

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT
SELECT A.ORG_TX
      ,A.PERIOD_END_DT
      ,'A' --ACTUAL
      ,A.IBB_ACCRUED_INT_AM
      ,B.IBB_ACCRUED_CONV_INT_AM
      ,CASE WHEN A.IBB_ACCRUED_INT_AM > 0 
             THEN CAST(CAST(B.IBB_ACCRUED_CONV_INT_AM AS FLOAT)/CAST(A.IBB_ACCRUED_INT_AM AS FLOAT) AS DECIMAL(12,9))
            ELSE 0 END AS IBB_ACCRUED_CONV_INT_PC
      ,C.NIBB_ACCRUED_INT_AM  
      ,D.NIBB_ACCRUED_CONV_INT_AM
      ,CASE WHEN C.NIBB_ACCRUED_INT_AM > 0 
             THEN CAST(CAST(D.NIBB_ACCRUED_CONV_INT_AM AS FLOAT)/CAST(C.NIBB_ACCRUED_INT_AM AS FLOAT) AS DECIMAL(12,9))
            ELSE 0 END AS NIBB_ACCRUED_CONV_INT_PC          
      
FROM 
(
SELECT ORG_TX
      ,PERIOD_END_DT
      ,'A' AS REC_TYPE
      ,SUM(ACCRUED_INT_AM) AS IBB_ACCRUED_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE  PERIOD_END_DT IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND    BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
GROUP BY 1,2,3
) A
JOIN
(
SELECT ORG_TX
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS IBB_ACCRUED_CONV_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND   NM_BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE NM_IBB_FLAG = 'N')
GROUP BY 1,2
) B
ON A.ORG_TX = B.ORG_TX
AND A.PERIOD_END_DT = B.PERIOD_END_DT
JOIN
(
SELECT ORG_TX
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS NIBB_ACCRUED_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD IN ('RNIBB')
GROUP BY 1,2
) C
ON A.ORG_TX = C.ORG_TX
AND A.PERIOD_END_DT = C.PERIOD_END_DT
JOIN
(
SELECT ORG_TX
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS NIBB_ACCRUED_CONV_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND   NM_BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE NM_IBB_FLAG = 'N')
GROUP BY 1,2
) D
ON A.ORG_TX = D.ORG_TX
AND A.PERIOD_END_DT = D.PERIOD_END_DT;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT INDEX ( ORG_TX,PERIOD_END_DT,REC_TYPE );


/*STEP 09.5 : COLLECT AGGREGATE DATA FOR REPORT - ACTUALS ONLY - PREF and NON PREF SPLIT using ORG */
/*
CREATE SET TABLE CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      ORG_TX CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
      LOGO SMALLINT,
      PERIOD_END_DT DATE FORMAT 'YYYY-MM-DD',
      REC_TYPE CHAR(1),
      IBB_ACCRUED_INT_AM DECIMAL(15,2),
      IBB_ACCRUED_CONV_INT_AM DECIMAL(15,2),
      IBB_ACCRUED_CONV_INT_PC DECIMAL(12,9),
      NIBB_ACCRUED_INT_AM DECIMAL(15,2),
      NIBB_ACCRUED_CONV_INT_AM DECIMAL(15,2),
      NIBB_ACCRUED_CONV_INT_PC DECIMAL(12,9)
      )
UNIQUE PRIMARY INDEX ( ORG_TX ,LOGO,PERIOD_END_DT,REC_TYPE );

COMMENT ON CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT AS 'PREF/NON PREF ACCRUAL SPLIT. SB 20150629';
*/

DELETE FROM CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT 
WHERE PERIOD_END_DT IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND REC_TYPE = 'A' ; --ACTUALS ONLY


/* PREFERENCE ACCOUNTS INSERT */

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT
SELECT A.ORG_TX
      ,A.LOGO
      ,A.PERIOD_END_DT
      ,'A' --ACTUAL
      ,A.IBB_ACCRUED_INT_AM
      ,B.IBB_ACCRUED_CONV_INT_AM
      ,CASE WHEN A.IBB_ACCRUED_INT_AM > 0 
             THEN CAST(CAST(B.IBB_ACCRUED_CONV_INT_AM AS FLOAT)/CAST(A.IBB_ACCRUED_INT_AM AS FLOAT) AS DECIMAL(12,9))
            ELSE 0 END AS IBB_ACCRUED_CONV_INT_PC
      ,C.NIBB_ACCRUED_INT_AM  
      ,D.NIBB_ACCRUED_CONV_INT_AM
      ,CASE WHEN C.NIBB_ACCRUED_INT_AM > 0 
             THEN CAST(CAST(D.NIBB_ACCRUED_CONV_INT_AM AS FLOAT)/CAST(C.NIBB_ACCRUED_INT_AM AS FLOAT) AS DECIMAL(12,9))
            ELSE 0 END AS NIBB_ACCRUED_CONV_INT_PC          
      
FROM 
(
SELECT ORG_TX
      ,LOGO
      ,PERIOD_END_DT
      ,'A' AS REC_TYPE
      ,SUM(ACCRUED_INT_AM) AS IBB_ACCRUED_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE  PERIOD_END_DT IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND    BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND    LOGO = 505
GROUP BY 1,2,3,4
) A
JOIN
(
SELECT ORG_TX
      ,LOGO
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS IBB_ACCRUED_CONV_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND   NM_BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE NM_IBB_FLAG = 'N')
AND   LOGO = 505
GROUP BY 1,2,3
) B
ON A.ORG_TX = B.ORG_TX
AND A.LOGO = B.LOGO
AND A.PERIOD_END_DT = B.PERIOD_END_DT
JOIN
(
SELECT ORG_TX
      ,LOGO
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS NIBB_ACCRUED_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND   LOGO = 505
GROUP BY 1,2,3
) C
ON A.ORG_TX = C.ORG_TX
AND A.LOGO = C.LOGO
AND A.PERIOD_END_DT = C.PERIOD_END_DT
JOIN
(
SELECT ORG_TX
      ,LOGO
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS NIBB_ACCRUED_CONV_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND   NM_BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE NM_IBB_FLAG = 'N')
AND   LOGO = 505
GROUP BY 1,2,3
) D
ON A.ORG_TX = D.ORG_TX
AND A.LOGO = D.LOGO
AND A.PERIOD_END_DT = D.PERIOD_END_DT;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/* NON PREFERENCE ACCOUNTS INSERT (LOGO SET TO 999) */

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT
SELECT A.ORG_TX
      ,A.LOGO
      ,A.PERIOD_END_DT
      ,'A' --ACTUAL
      ,A.IBB_ACCRUED_INT_AM
      ,B.IBB_ACCRUED_CONV_INT_AM
      ,CASE WHEN A.IBB_ACCRUED_INT_AM > 0 
             THEN CAST(CAST(B.IBB_ACCRUED_CONV_INT_AM AS FLOAT)/CAST(A.IBB_ACCRUED_INT_AM AS FLOAT) AS DECIMAL(12,9))
            ELSE 0 END AS IBB_ACCRUED_CONV_INT_PC
      ,C.NIBB_ACCRUED_INT_AM  
      ,D.NIBB_ACCRUED_CONV_INT_AM
      ,CASE WHEN C.NIBB_ACCRUED_INT_AM > 0 
             THEN CAST(CAST(D.NIBB_ACCRUED_CONV_INT_AM AS FLOAT)/CAST(C.NIBB_ACCRUED_INT_AM AS FLOAT) AS DECIMAL(12,9))
            ELSE 0 END AS NIBB_ACCRUED_CONV_INT_PC          
      
FROM 
(
SELECT ORG_TX
      ,999 AS LOGO
      ,PERIOD_END_DT
      ,'A' AS REC_TYPE
      ,SUM(ACCRUED_INT_AM) AS IBB_ACCRUED_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE  PERIOD_END_DT IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND    BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND    LOGO <> 505
GROUP BY 1,2,3,4
) A
JOIN
(
SELECT ORG_TX
      ,999 AS LOGO
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS IBB_ACCRUED_CONV_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND   NM_BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE NM_IBB_FLAG = 'N')
AND   LOGO <> 505
GROUP BY 1,2,3
) B
ON A.ORG_TX = B.ORG_TX
AND A.LOGO = B.LOGO
AND A.PERIOD_END_DT = B.PERIOD_END_DT
JOIN
(
SELECT ORG_TX
      ,999 AS LOGO
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS NIBB_ACCRUED_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND   LOGO <> 505
GROUP BY 1,2,3
) C
ON A.ORG_TX = C.ORG_TX
AND A.LOGO = C.LOGO
AND A.PERIOD_END_DT = C.PERIOD_END_DT
JOIN
(
SELECT ORG_TX
      ,999 AS LOGO
      ,PERIOD_END_DT
      ,SUM(ACCRUED_INT_AM) AS NIBB_ACCRUED_CONV_INT_AM
FROM   CC_COBRA.FR01_ACC_INT_BW_CONV 
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND   NM_BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE NM_IBB_FLAG = 'N')
AND   LOGO <> 505
GROUP BY 1,2,3
) D
ON A.ORG_TX = D.ORG_TX
AND A.LOGO = D.LOGO
AND A.PERIOD_END_DT = D.PERIOD_END_DT;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


COLLECT STATS ON CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT INDEX ( ORG_TX,LOGO,PERIOD_END_DT,REC_TYPE );

/********************************ESTIMATES************************************/

/*STEP 10: COLLECT AGGREGATE DATA FOR REPORT - ESTIMATES ONLY - DATE IS FOLLOWING MONTH OF DATE PARAMETER*/

DELETE FROM CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT 
WHERE PERIOD_END_DT IN (SELECT ADD_MONTHS(REPORT_DT+1,1)-1 FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND REC_TYPE = 'E' ; --ESTIMATES ONLY

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT
SELECT
    A.ORG_TX
   ,A.PERIOD_END_DT
   ,A.REC_TYPE
   ,B.IBB_ACCRUED_INTEREST_AM
   ,CAST(B.IBB_ACCRUED_INTEREST_AM*CAST(A.IBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5)) AS DECIMAL(15,2))
   ,CAST(A.IBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5))
   ,C.NIBB_ACCRUED_INTEREST_AM
   ,CAST(C.NIBB_ACCRUED_INTEREST_AM*CAST(A.NIBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5)) AS DECIMAL(15,2))
   ,CAST(A.NIBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5))
FROM 
(SELECT A.ORG_TX
      ,B.NM_REPORT_DT AS PERIOD_END_DT
      ,'E' AS REC_TYPE --ESTIMATE ONLY
      ,AVERAGE(IBB_ACCRUED_CONV_INT_PC) AS IBB_ACCRUED_CONV_INT_PC
      ,AVERAGE(NIBB_ACCRUED_CONV_INT_PC) AS NIBB_ACCRUED_CONV_INT_PC

FROM  CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT A
JOIN  CC_COBRA.WK_FR01_REPORT_DATE_R2 B
ON    A.PERIOD_END_DT/100 BETWEEN ADD_MONTHS(B.REPORT_DT,-2)/100 AND B.REPORT_DT/100
AND   REC_TYPE = 'A'
GROUP BY 1,2
) A
JOIN 
(
SELECT ORG_TX AS ORG_TX
      ,ADD_MONTHS(CAST(((REPORT_DT/100*100)+1) AS DATE),1)-1 AS PERIOD_END_DT
      ,SUM(ACCRUED_INTEREST) AS IBB_ACCRUED_INTEREST_AM
FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW A
WHERE BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND (REPORT_DT = (SELECT MAX(Y.REPORT_DT)
                  FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW Y
                  JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 Z
                  ON   Z.NM_REPORT_DT/100 = Y.REPORT_DT/100
                  AND Y.REPORT_DT = (                  
  				                        SELECT MAX(B.CALENDAR_DATE) 
                                         FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 A
                                         JOIN CC_COBRA.GRID_REPORTS_CONTROL B
                                         ON A.NM_REPORT_DT/100 = B.CALENDAR_DATE/100)
                  OR (Y.REPORT_DT = (SELECT NM_REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2))) 
  )
GROUP BY 1,2
) B
ON A.ORG_TX = B.ORG_TX
AND A.PERIOD_END_DT = B.PERIOD_END_DT
JOIN 
(
SELECT ORG_TX AS ORG_TX
      ,ADD_MONTHS(CAST(((REPORT_DT/100*100)+1) AS DATE),1)-1 AS PERIOD_END_DT
      ,SUM(ACCRUED_INTEREST) AS NIBB_ACCRUED_INTEREST_AM
FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW A
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND (REPORT_DT = (SELECT MAX(Y.REPORT_DT)
                  FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW Y
                  JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 Z
                  ON   Z.NM_REPORT_DT/100 = Y.REPORT_DT/100
                  AND Y.REPORT_DT = (                  
  				                        SELECT MAX(B.CALENDAR_DATE) 
                                         FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 A
                                         JOIN CC_COBRA.GRID_REPORTS_CONTROL B
                                         ON A.NM_REPORT_DT/100 = B.CALENDAR_DATE/100)
                  OR (Y.REPORT_DT = (SELECT NM_REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2))) 
  )
GROUP BY 1,2
) C
ON A.ORG_TX = C.ORG_TX
AND A.PERIOD_END_DT = C.PERIOD_END_DT
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.FR01_ACC_INT_BW_CONV_REPORT INDEX ( ORG_TX,PERIOD_END_DT,REC_TYPE );



/*STEP 10.5: COLLECT AGGREGATE DATA FOR PREF/NON PREF REPORT - ESTIMATES ONLY - DATE IS FOLLOWING MONTH OF DATE PARAMETER*/

DELETE FROM CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT 
WHERE PERIOD_END_DT IN (SELECT ADD_MONTHS(REPORT_DT+1,1)-1 FROM CC_COBRA.WK_FR01_REPORT_DATE_R2)
AND REC_TYPE = 'E' ; --ESTIMATES ONLY

/* PREFERENCE ACCOUNTS INSERT */

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT
SELECT
    A.ORG_TX
   ,A.LOGO
   ,A.PERIOD_END_DT
   ,A.REC_TYPE
   ,B.IBB_ACCRUED_INTEREST_AM
   ,CAST(B.IBB_ACCRUED_INTEREST_AM*CAST(A.IBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5)) AS DECIMAL(15,2))
   ,CAST(A.IBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5))
   ,C.NIBB_ACCRUED_INTEREST_AM
   ,CAST(C.NIBB_ACCRUED_INTEREST_AM*CAST(A.NIBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5)) AS DECIMAL(15,2))
   ,CAST(A.NIBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5))
FROM 
(SELECT A.ORG_TX
      ,LOGO
      ,B.NM_REPORT_DT AS PERIOD_END_DT
      ,'E' AS REC_TYPE --ESTIMATE ONLY
      ,AVERAGE(IBB_ACCRUED_CONV_INT_PC) AS IBB_ACCRUED_CONV_INT_PC
      ,AVERAGE(NIBB_ACCRUED_CONV_INT_PC) AS NIBB_ACCRUED_CONV_INT_PC

FROM  CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT A
JOIN  CC_COBRA.WK_FR01_REPORT_DATE_R2 B
ON    A.PERIOD_END_DT/100 BETWEEN ADD_MONTHS(B.REPORT_DT,-2)/100 AND B.REPORT_DT/100
AND   REC_TYPE = 'A'
AND   LOGO = 505
GROUP BY 1,2,3
) A
JOIN 
(
SELECT ORG_TX AS ORG_TX
      ,LOGO
      ,ADD_MONTHS(CAST(((REPORT_DT/100*100)+1) AS DATE),1)-1 AS PERIOD_END_DT
      ,SUM(ACCRUED_INTEREST) AS IBB_ACCRUED_INTEREST_AM
FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW A
WHERE BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND (REPORT_DT = (SELECT MAX(Y.REPORT_DT)
                  FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW Y
                  JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 Z
                  ON   Z.NM_REPORT_DT/100 = Y.REPORT_DT/100
                  AND Y.REPORT_DT = (                  
  				                        SELECT MAX(B.CALENDAR_DATE) 
                                         FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 A
                                         JOIN CC_COBRA.GRID_REPORTS_CONTROL B
                                         ON A.NM_REPORT_DT/100 = B.CALENDAR_DATE/100)
                  OR (Y.REPORT_DT = (SELECT NM_REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2))) 
  )
AND LOGO = 505
GROUP BY 1,2,3
) B
ON A.ORG_TX = B.ORG_TX
AND A.LOGO = B.LOGO
AND A.PERIOD_END_DT = B.PERIOD_END_DT
JOIN 
(
SELECT ORG_TX AS ORG_TX
      ,LOGO
      ,ADD_MONTHS(CAST(((REPORT_DT/100*100)+1) AS DATE),1)-1 AS PERIOD_END_DT
      ,SUM(ACCRUED_INTEREST) AS NIBB_ACCRUED_INTEREST_AM
FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW A
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND (REPORT_DT = (SELECT MAX(Y.REPORT_DT)
                  FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW Y
                  JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 Z
                  ON   Z.NM_REPORT_DT/100 = Y.REPORT_DT/100
                  AND Y.REPORT_DT = (                  
  				                        SELECT MAX(B.CALENDAR_DATE) 
                                         FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 A
                                         JOIN CC_COBRA.GRID_REPORTS_CONTROL B
                                         ON A.NM_REPORT_DT/100 = B.CALENDAR_DATE/100)
                  OR (Y.REPORT_DT = (SELECT NM_REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2))) 
  )
AND LOGO = 505
GROUP BY 1,2,3
) C
ON A.ORG_TX = C.ORG_TX
AND A.LOGO = C.LOGO
AND A.PERIOD_END_DT = C.PERIOD_END_DT
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/* NON PREFERENCE ACCOUNTS INSERT */

INSERT INTO CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT
SELECT
    A.ORG_TX
   ,A.LOGO
   ,A.PERIOD_END_DT
   ,A.REC_TYPE
   ,B.IBB_ACCRUED_INTEREST_AM
   ,CAST(B.IBB_ACCRUED_INTEREST_AM*CAST(A.IBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5)) AS DECIMAL(15,2))
   ,CAST(A.IBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5))
   ,C.NIBB_ACCRUED_INTEREST_AM
   ,CAST(C.NIBB_ACCRUED_INTEREST_AM*CAST(A.NIBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5)) AS DECIMAL(15,2))
   ,CAST(A.NIBB_ACCRUED_CONV_INT_PC AS DECIMAL(9,5))
FROM 
(SELECT A.ORG_TX
      ,999 AS LOGO
      ,B.NM_REPORT_DT AS PERIOD_END_DT
      ,'E' AS REC_TYPE --ESTIMATE ONLY
      ,AVERAGE(IBB_ACCRUED_CONV_INT_PC) AS IBB_ACCRUED_CONV_INT_PC
      ,AVERAGE(NIBB_ACCRUED_CONV_INT_PC) AS NIBB_ACCRUED_CONV_INT_PC

FROM  CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT A
JOIN  CC_COBRA.WK_FR01_REPORT_DATE_R2 B
ON    A.PERIOD_END_DT/100 BETWEEN ADD_MONTHS(B.REPORT_DT,-2)/100 AND B.REPORT_DT/100
AND   REC_TYPE = 'A'
AND   LOGO <> 505
GROUP BY 1,2,3
) A
JOIN 
(
SELECT ORG_TX AS ORG_TX
      ,999 AS LOGO
      ,ADD_MONTHS(CAST(((REPORT_DT/100*100)+1) AS DATE),1)-1 AS PERIOD_END_DT
      ,SUM(ACCRUED_INTEREST) AS IBB_ACCRUED_INTEREST_AM
FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW A
WHERE BALANC_TYPE_CD NOT IN (SELECT BALANC_TYPE_CD FROM CC_COBRA.FR17_BALANC_TYPE_CD_LOOKUP WHERE IBB_FLAG = 'N')
AND (REPORT_DT = (SELECT MAX(Y.REPORT_DT)
                  FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW Y
                  JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 Z
                  ON   Z.NM_REPORT_DT/100 = Y.REPORT_DT/100
                  AND Y.REPORT_DT = (                  
  				                        SELECT MAX(B.CALENDAR_DATE) 
                                         FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 A
                                         JOIN CC_COBRA.GRID_REPORTS_CONTROL B
                                         ON A.NM_REPORT_DT/100 = B.CALENDAR_DATE/100)
                  OR (Y.REPORT_DT = (SELECT NM_REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2))) 
  )
AND LOGO <> 505
GROUP BY 1,2,3
) B
ON A.ORG_TX = B.ORG_TX
AND A.LOGO = B.LOGO
AND A.PERIOD_END_DT = B.PERIOD_END_DT
JOIN 
(
SELECT ORG_TX AS ORG_TX
      ,999 AS LOGO
      ,ADD_MONTHS(CAST(((REPORT_DT/100*100)+1) AS DATE),1)-1 AS PERIOD_END_DT
      ,SUM(ACCRUED_INTEREST) AS NIBB_ACCRUED_INTEREST_AM
FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW A
WHERE BALANC_TYPE_CD IN ('RNIBB')
AND (REPORT_DT = (SELECT MAX(Y.REPORT_DT)
                  FROM CC_COBRA.FR01_ACCRUED_INTEREST_BW Y
                  JOIN CC_COBRA.WK_FR01_REPORT_DATE_R2 Z
                  ON   Z.NM_REPORT_DT/100 = Y.REPORT_DT/100
                  AND Y.REPORT_DT = (                  
  				                        SELECT MAX(B.CALENDAR_DATE) 
                                         FROM CC_COBRA.WK_FR01_REPORT_DATE_R2 A
                                         JOIN CC_COBRA.GRID_REPORTS_CONTROL B
                                         ON A.NM_REPORT_DT/100 = B.CALENDAR_DATE/100)
                  OR (Y.REPORT_DT = (SELECT NM_REPORT_DT FROM CC_COBRA.WK_FR01_REPORT_DATE_R2))) 
  )
AND LOGO <> 505
GROUP BY 1,2,3
) C
ON A.ORG_TX = C.ORG_TX
AND A.LOGO = C.LOGO
AND A.PERIOD_END_DT = C.PERIOD_END_DT
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


COLLECT STATS ON CC_COBRA.FR01_ACC_INT_BW_CONV_PREF_SPLT INDEX ( ORG_TX,LOGO,PERIOD_END_DT,REC_TYPE );

--DELETE FROM CC_COBRA.WK_FR01_ACC_INT_BW_CONV ALL;


/*UPDATE THE LOG TABLE IF IT HAS RUN OK!*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'FR01C'
;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT   
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'FR01C';

.LABEL SKIPTOEND;

/*UPDATE THE LOG TABLE IF IT HAS RUN OK!*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'FR01'
;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT   
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'FR01';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'FR01'
;

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR15';

.IF ACTIVITYCOUNT = 0 THEN .GOTO SKIPC;


UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'FR01C'
;

.LABEL SKIPC;

.QUIT 0;

