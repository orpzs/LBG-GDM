/************************************************************************/
/*JOB:      C01J08 - AGREEMENT_STATIC_DAILY                             */
/*VERSION:  FR15V09 DuplicateAgreementInPart2Update1                    */
/*DATE VERSION IMPLEMENTED: 2016-04-01                                  */
/*DATE VERSION UPDATED: 2023-03-07                                      */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*                                                                      */
/*Note: This job is a MTD version of VP57632D                           */    
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*STEP 02: INITIAL CHECKS TO SEE IF THIS PARTICULAR JOB HAS ALREADY RUN SUCCESSFULLY*/
/*IF THERE IS ALREADY DATA IT WILL SKIP THE JOB*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J08';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'C01J08'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*UPDATE THE VERDE FLAG TABLE WITH NEW ACCOUNTS*/

INSERT INTO CC_COBRA.CC_VERDE_FLAG_DAILY
SELECT 
A.AGRMNT_ID
,MIN(A.SOURCE_START_DT)
,'3500/12/31'
,1
FROM GDW_VIEWS.CREDIT_CARD_AGREEMENT A 
WHERE ORG_TX = '170' 
AND NOT EXISTS (
SELECT NULL
FROM CC_COBRA.CC_VERDE_FLAG_DAILY B
WHERE A.AGRMNT_ID = B.AGRMNT_ID)
GROUP BY 1,3,4
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.CC_VERDE_FLAG_DAILY;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 03 - DATE CONTROL*/
/*
CREATE SET TABLE CC_COBRA.WK_C01J08_DATES_CONTROL ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      ANLYTC_NM CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC,
      PERIOD_START_DT DATE FORMAT 'YY/MM/DD',
      PERIOD_END_DT DATE FORMAT 'YY/MM/DD',
      PERIOD_TYPE_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC)
PRIMARY INDEX ( ANLYTC_NM );
*/

DELETE FROM CC_COBRA.WK_C01J08_DATES_CONTROL ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

INSERT INTO CC_COBRA.WK_C01J08_DATES_CONTROL
SELECT 'CARD_KPI'
      , SOURCE_START_DT
      , SOURCE_START_DT
      ,'D'           
FROM CC_COBRA.CC_COBRA_LOAD_START_DT
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT * FROM CC_COBRA.WK_C01J08_DATES_CONTROL;

/*STEP 04: GET DATA FROM LIVE TABLE*/
/*
CREATE SET TABLE CC_COBRA.AGREEMENT_STATIC_DAILY ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      AGRMNT_ID INTEGER NOT NULL,
      ORIGNL_AGRMNT_ID INTEGER NOT NULL,
      PARTY_ID INTEGER,
      AGRMNT_OPEN_DT DATE FORMAT 'YYYY-MM-DD',
      AGRMNT_OPEN_REASON_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL COMPRESS ('F','N','T'),
      AGRMNT_CLOSE_DT DATE FORMAT 'YYYY-MM-DD' COMPRESS ,
      AGRMNT_CLOSE_REASON_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
      AGRMNT_CLOSE_OBSRVN_DT DATE FORMAT 'YYYY-MM-DD',
      AGRMNT_SELLNG_SORT_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      AGRMNT_OPEN_SOURCE_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '00599999',
      PRODCT_LOGO_CD SMALLINT,
      PRODCT_ID INTEGER,
      MAC_CD CHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '9999999999999999    ',
      NEW_MAC_TYPE_IN CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('N','Y'),
      AGRMNT_SELLNG_CHANNL_CD VARCHAR(12),
      PRODCT_SCHEME_TX CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('A','M','V'),
      INSERT_DT DATE FORMAT 'YYYY-MM-DD' NOT NULL,
      LAST_UPDATE_DT DATE FORMAT 'YYYY-MM-DD' COMPRESS )
UNIQUE PRIMARY INDEX ( AGRMNT_ID )
INDEX ( ORIGNL_AGRMNT_ID )
INDEX ( PARTY_ID );
*/


DELETE FROM CC_COBRA.AGREEMENT_STATIC_DAILY ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR

INSERT INTO CC_COBRA.AGREEMENT_STATIC_DAILY 
SELECT * FROM GRIDX_DV_RETAIL.AGREEMENT_STATIC;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 05: NORMAL RUN*/

INSERT INTO CC_COBRA.AGREEMENT_STATIC_DAILY
(AGRMNT_ID
,ORIGNL_AGRMNT_ID
,PARTY_ID
,AGRMNT_OPEN_DT
,AGRMNT_OPEN_REASON_CD
,AGRMNT_CLOSE_DT
,AGRMNT_CLOSE_REASON_CD
,AGRMNT_CLOSE_OBSRVN_DT
,AGRMNT_SELLNG_SORT_CD
,AGRMNT_OPEN_SOURCE_CD
,PRODCT_LOGO_CD
,PRODCT_ID
,MAC_CD
,NEW_MAC_TYPE_IN
,AGRMNT_SELLNG_CHANNL_CD
,PRODCT_SCHEME_TX
,INSERT_DT
,LAST_UPDATE_DT
)

SELECT   CAK.AGRMNT_ID
        ,COALESCE(AGRO.ORIGNL_AGRMNT_ID,CAK.AGRMNT_ID) AS ORIGNL_AGRMNT_ID
        ,NULL AS PARTY_ID
        ,AGM.OPENED_DT              AS AGRMNT_OPEN_DT
        ,CASE WHEN AGRO.AGRMNT_RLTNSP_TYPE_CD = '00500001'
              THEN 'T'
              WHEN ASS.AGRMNT_ID IS NOT NULL THEN 'F'
              ELSE 'N'
              END
              AS AGRMNT_OPEN_REASON_CD
        ,AGM.CLOSED_DT              AS AGRMNT_CLOSE_DT
        ,CASE WHEN AGM.CLOSED_DT IS NOT NULL
                 AND  AGRC.AGRMNT_RLTNSP_TYPE_CD IS NOT NULL
                 THEN '6'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND BC1.AGRMNT_STATUS_SUMMRY_VL = 'C'
                 THEN '1'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND BC1.AGRMNT_STATUS_SUMMRY_VL = 'W'
                 THEN '2'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND BC1.AGRMNT_STATUS_SUMMRY_VL = 'D'
                 THEN '4'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND BC1.AGRMNT_STATUS_SUMMRY_VL IN ('S','L','U','T')
                 THEN '5'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND BC1.AGRMNT_STATUS_SUMMRY_VL = 'Y'
                 THEN '7'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND BC1.AGRMNT_STATUS_SUMMRY_VL = 'Z'
                 THEN '8'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND STA.AGRMNT_STATUS_SUMMRY_VL = 'H'
                 THEN '1'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND STA.AGRMNT_STATUS_SUMMRY_VL IN ('9','P')
                 THEN '9'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND STA.AGRMNT_STATUS_SUMMRY_VL = '8'
                 THEN '3'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 AND STA.AGRMNT_STATUS_SUMMRY_VL IN ('X','Z')
                 THEN '8'
              WHEN AGM.CLOSED_DT IS NOT NULL
                 THEN '0' /*DEFAULT REST TO 0 UNKNOWN*/
              ELSE NULL
              END  AS AGRMNT_CLOSE_REASON_CD
        ,CASE WHEN AGM.CLOSED_DT IS NOT NULL
              THEN CAD.PERIOD_END_DT
              ELSE NULL
              END AS AGRMNT_CLOSE_OBSRVN_DT
        ,AOM.SELLNG_BRANCH_SORT_CD  AS AGRMNT_SELLNG_SORT_CD
        ,AGM.AGRMNT_OBTAND_TYPE_CD  AS AGRMNT_OPEN_SOURCE
        ,CCA.CREDIT_CARD_LOGO_CD AS PRODCT_LOGO_CD
        ,CPL.PRODCT_ID
        ,COALESCE(WK_MAC.MAC_CD,'9999999999999999')
        ,WK_MAC.NEW_MAC_TYPE_IN
        ,CHC.CHANNL_CD
        ,CASE
          WHEN CCA.CREDIT_CARD_LOGO_CD IN (100,110)
            THEN 'D'
          WHEN CCA.CREDIT_CARD_LOGO_CD BETWEEN 100 AND 199
            THEN 'A'
          WHEN CCA.CREDIT_CARD_LOGO_CD BETWEEN 300 AND 499
            THEN 'M'
          WHEN CCA.CREDIT_CARD_LOGO_CD BETWEEN 500 AND 599
            THEN 'V'
          WHEN CCA.CREDIT_CARD_LOGO_CD BETWEEN 700 AND 799
            THEN 'D'
            ELSE 'U'
         END                        AS PRDCT_SCHEME
        ,CAD.PERIOD_END_DT AS INSERT_DT
        ,NULL AS LAST_UPDATE_DT

FROM     (SELECT * FROM GDW_VIEWS.CREDIT_CARD_AGREEMENT A
          WHERE NOT EXISTS (SELECT 'Y'
                            FROM  GRIDX_DV_RETAIL.AGREEMENT_STATIC B
                            WHERE A.AGRMNT_ID = B.AGRMNT_ID)
          AND A.ORG_TX <> '170'
          AND A.SOURCE_END_DT = '3500/12/31'
                            ) CAK

CROSS JOIN CC_COBRA.WK_C01J08_DATES_CONTROL CAD

LEFT JOIN GDW_VIEWSX.AGREEMENT AGM
--LEFT JOIN CC_COBRA.AGREEMENT AGM
ON       CAK.AGRMNT_ID = AGM.AGRMNT_ID
AND      CAD.PERIOD_END_DT BETWEEN AGM.SOURCE_START_DT
                       AND     AGM.SOURCE_END_DT-1

INNER JOIN GDW_VIEWS.CREDIT_CARD_AGREEMENT CCA
ON       CAK.AGRMNT_ID = CCA.AGRMNT_ID
AND      CAD.PERIOD_END_DT BETWEEN CCA.SOURCE_START_DT
                       AND     CCA.SOURCE_END_DT-1

INNER JOIN GDW_VIEWS.CC_PRODUCT_LOOKUP CPL
ON       CCA.CREDIT_CARD_LOGO_CD = CPL.LOGO_VL
AND      CCA.ORG_TX = CPL.ORG_TX

LEFT OUTER JOIN GDW_VIEWS.AGREEMENT_OFFER_MANAGER AOM
ON       CAK.AGRMNT_ID   = AOM.AGRMNT_ID
AND      AOM.OFFER_ID_TX IN ('NEWACC','005Z0NEW  ','SECACC')
--'SECACC' added by Eynon 12.02.15. 
--Weekly table GRIDX_DV_RETAIL.AGREEMENT_STATIC does not yet have this extra condition added,
--so AGRMNT_SELLNG_SORT_CD and AGRMNT_SELLNG_CHANNL_CD detail for these SECACCS is updated in next stage.
AND      AOM.END_DT = 16001231
--Added by Eynon 09.02.18 to avoid duplicates eg. agreement 1180823221

LEFT OUTER JOIN
        (SELECT   ACM.AGRMNT_ID
                 ,ACM.MAC_CD
                 ,ACM.NEW_MAC_TYPE_IN
                 ,ROW_NUMBER() OVER    (PARTITION BY ACM.AGRMNT_ID
                               ORDER BY ACM.SOURCE_START_DT)
                                                    AS MAC_SEQ
         FROM    GDW_VIEWS.AGREEMENT_CC_MAC ACM
         INNER JOIN GDW_VIEWS.CREDIT_CARD_AGREEMENT CAK
         ON    CAK.AGRMNT_ID = ACM.AGRMNT_ID
         AND   CAK.SOURCE_END_DT = '3500/12/31'
         WHERE NEW_MAC_TYPE_IN = 'Y') AS WK_MAC
ON       CAK.AGRMNT_ID = WK_MAC.AGRMNT_ID
AND      WK_MAC.MAC_SEQ = 1

LEFT OUTER JOIN
 (
 SEL CHANNL_CD, SORT_CD
 FROM GDW_VIEWS.OU_STRUCTURE_SORTCODE_GL
 GROUP BY 1,2
 ) CHC

ON AOM.SELLNG_BRANCH_SORT_CD = CAST(CHC.SORT_CD AS CHAR(6))

LEFT OUTER JOIN GDW_VIEWS.AGREEMENT_RELATIONSHIP AGRO
ON       CAK.AGRMNT_ID = AGRO.AGRMNT_ID AND AGRO.AGRMNT_RLTNSP_TYPE_CD ='00500001'  /* 20190516PG - Added to restrict to Traded records only	*/

LEFT OUTER JOIN GDW_VIEWS.AGREEMENT_RELATIONSHIP AGRC
ON  COALESCE(AGRO.ORIGNL_AGRMNT_ID,CAK.AGRMNT_ID) = AGRC.ORIGNL_AGRMNT_ID
AND COALESCE(AGRO.AGRMNT_RLTNSP_SEQUNC_NO+1,1)=AGRC.AGRMNT_RLTNSP_SEQUNC_NO

LEFT OUTER JOIN (SELECT DISTINCT AGRMNT_ID
                 FROM GDW_VIEWS.AGREEMENT_STATUS_SUMMARY
                 WHERE AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500026'
                 AND   AGRMNT_STATUS_SUMMRY_VL = 'F') ASS
ON       CAK.AGRMNT_ID = ASS.AGRMNT_ID

LEFT OUTER JOIN GDW_VIEWS.AGREEMENT_STATUS_SUMMARY BC1

ON       CAK.AGRMNT_ID = BC1.AGRMNT_ID
AND      BC1.AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500023'
AND      (CASE WHEN AGM.CLOSED_DT < '2007/05/01'
               THEN CAST ('2007/05/01' AS DATE)
              ELSE AGM.CLOSED_DT END)
          BETWEEN  BC1.SOURCE_START_DT AND BC1.SOURCE_END_DT-1
AND      BC1.AGRMNT_STATUS_SUMMRY_VL
         IN ('C','W','D','S','T','U','Y','Z')

LEFT OUTER JOIN GDW_VIEWS.AGREEMENT_STATUS_SUMMARY STA

ON       CAK.AGRMNT_ID = STA.AGRMNT_ID
AND      STA.AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500026'
AND      (CASE WHEN AGM.CLOSED_DT < '2007/05/01'
               THEN CAST ('2007/05/01' AS DATE)
              ELSE AGM.CLOSED_DT END)
          BETWEEN  STA.SOURCE_START_DT AND STA.SOURCE_END_DT-1

AND      STA.AGRMNT_STATUS_SUMMRY_VL
              IN ('H','P','X','Z','8','9')

WHERE    CAD.ANLYTC_NM = 'CARD_KPI'

GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.AGREEMENT_STATIC_DAILY INDEX (AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR

COLLECT STATS ON CC_COBRA.AGREEMENT_STATIC_DAILY INDEX (ORIGNL_AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/****************************************************************************************/
/*PART 2 UPDATES BELOW ADDED BY EYNON 12/02/15                                          */
/*GIVES SELLNG_BRANCH_SORT_CD and AGRMNT_SELLNG_CHANNL_CD DETAIL FOR ALL SECACC ACCOUNTS*/ 
/*CAN BE REMOVED WHEN GRIDX_DV_RETAIL AGREEMENT_STATIC INCLUDES THIS DETAIL             */
/*UPDATES:                                                                              */
/*070323BB/BK: ADDED AND AND T2.SELLNG_BRANCH_SORT_CD > 0 TO 1ST UPDATE AS GETTING DUPE */
/*             AGREEMENTS DRIVEN BY EXPIRED RECORDS. ALSO EXCLUDE NULL SORT-CDs         */
/*                                                                                      */
/****************************************************************************************/

UPDATE CC_COBRA.AGREEMENT_STATIC_DAILY
FROM   (SELECT 
		T2.AGRMNT_ID,
              	T2.SELLNG_BRANCH_SORT_CD,
              	MAX(END_DT) MAX_END_DT
       FROM GDW_VIEWSX.AGREEMENT_OFFER_MANAGER T2
       WHERE OFFER_ID_TX = 'SECACC' AND T2.SELLNG_BRANCH_SORT_CD > 0
       GROUP BY 1,2
       ) AOM
SET  AGRMNT_SELLNG_SORT_CD = AOM.SELLNG_BRANCH_SORT_CD
WHERE AOM.AGRMNT_ID = AGREEMENT_STATIC_DAILY.AGRMNT_ID 
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

UPDATE CC_COBRA.AGREEMENT_STATIC_DAILY
FROM 
 (
 SEL CHANNL_CD, SORT_CD
 FROM ACUMENX_VIEWS.OU_STRUCTURE_SORTCODE_GL
 GROUP BY 1,2
 ) OSSG
SET AGRMNT_SELLNG_CHANNL_CD = OSSG.CHANNL_CD
WHERE AGRMNT_SELLNG_SORT_CD = CAST(OSSG.SORT_CD AS CHAR(8))
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.AGREEMENT_STATIC_DAILY INDEX (AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.AGREEMENT_STATIC_DAILY INDEX (ORIGNL_AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*UPDATE THE LOAD LOG TO THE CURRENT DATE TO INDICATE SUCCESSFUL PROCESSING*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'C01J08'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT 
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'C01J08';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J08'
;

.QUIT 0;

.LABEL GRIDERROR;

.QUIT;
