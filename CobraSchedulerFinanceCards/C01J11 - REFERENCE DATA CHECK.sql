/************************************************************************/
/*JOB:      C01J11 REFERENCE DATA CHECK AGAINST LIVE - CHECK FOR DIFF   */
/*VERSION:  C01J11v20 99990 FIX                                         */
/*DATE VERSION IMPLEMENTED: 2024/05/10                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*100524-BB-EXCLUDED PLAN '99990' FROM STEP 06 CHECKS, TEMP CHNG        */
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8
.SET RETLIMIT 20;

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 00A: INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*STEP 00B: INITIAL CHECKS TO SEE IF THIS PARTICULAR JOB HAS ALREADY RUN SUCCESSFULLY*/
/*IF THERE IS ALREADY DATA IT WILL SKIP THE JOB*/
/* SB amended to check both entries in CC_COBRA_LOAD_LOG and include a successful completion status */
/* JM amended to check all 3 entries have been successful 20190320*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   LOAD_STATUS = 'C'
AND   GRID_LOAD_ID IN ('C01J11','C01J11S','C01J11P');

.IF ACTIVITYCOUNT = 3 THEN .GOTO SKIPJOB;

/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'C01J11'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'C01J11S'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'C01J11P'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*
CREATE TABLE CC_COBRA.CC_REF_DATA_LIVE_SYNC(
TABLE_NM VARCHAR(60)
,SYNC_IN CHAR(1)
) UNIQUE PRIMARY INDEX(TABLE_NM);
*/
/*STEP 01: CHECK DERVTN_SOURCE_CHANNL_DETAIL*/
/*STEP 02: CHECK DERVTN_SOURCE_CHANNL*/
/*STEP 03: CHECK TRNSCN_DERVTN_GROUPS*/
/*STEP 04: CHECK CC_ISSUER_SORT_CODE_LOOKUP*/
/*STEP 05: CHECK EVENT_IDS ARE IN SYNC OR NOT*/
/*STEP 06: CHECK NEW RECORDS FOR CC_PLAN_LOOKUP*/
/*STEP 07: CHECK CC_PLAN_LOOKUP*/

/*
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 01: DERVTN_SOURCE_CHANNL_DETAIL', 'N';
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 02: DERVTN_SOURCE_CHANNL', 'Y';
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 03: TRNSCN_DERVTN_GROUPS', 'N';
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 04: CC_ISSUER_SORT_CODE_LOOKUP', 'N';
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 05: EVENT_ID IN SYNC', 'Y';

INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 06: CC_COBRA.CC_PLAN_LOOKUP FULL', 'N';
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 07: CC_PLAN_LOOKUP', 'N';
INSERT INTO CC_COBRA.CC_REF_DATA_LIVE_SYNC
SELECT 'STEP 08: PLAN 90003 ISSUE', 'Y';
COLLECT STATS ON CC_COBRA.CC_REF_DATA_LIVE_SYNC INDEX(TABLE_NM);

SELECT * FROM CC_COBRA.CC_REF_DATA_LIVE_SYNC;

*/



/*STEP 01: CHECK DERVTN_SOURCE_CHANNL_DETAIL - ALL DATA IS COPIED ACROSS FROM GRID_DV_USER_PARAMETERS.DERVTN_SOURCE_CHANNL_DETAIL WHICH WE HAVE WRITE ACCESS TO*/

/*FIRST INSERT ANY RECORDS FROM LIVE THAT ARE NOT IN THE CC_COBRA VERSION. */
/* THESE ARE LIKELY INSERTED BY TSB AS IT IS A SHARED TABLE - SO WE WILL FLAG AS SUCH FOR REVIEW PERIODICALLY*/
/*--REMOVED TO PREVENT INSERTS DUE TO HELPDESK DELAYS
INSERT INTO CC_COBRA.DERVTN_SOURCE_CHANNL_DETAIL
SELECT B.MAC_CD
      ,B.DERVTN_CHANNL_GROUP_NM
      ,B.DERVTN_SOURCE_NM
      ,B.START_DT
      ,B.END_DT
      ,B.SOURCE_START_DT
      ,B.SOURCE_END_DT
      ,'T' --LIKELY TSB INSERT
FROM
(SELECT MAC_CD, DERVTN_CHANNL_GROUP_NM, DERVTN_SOURCE_NM
FROM GRIDX_DV_RETAIL.DERVTN_SOURCE_CHANNL_DETAIL 
WHERE SOURCE_END_DT = '3500/12/31'
MINUS 
SELECT MAC_CD, DERVTN_CHANNL_GROUP_NM, DERVTN_SOURCE_NM
FROM CC_COBRA.DERVTN_SOURCE_CHANNL_DETAIL 
WHERE SOURCE_END_DT = '3500/12/31') A --THIS DERIVED TABLE PICKS UP ALL IN LIVE NOT IN CC_COBRA
JOIN GRIDX_DV_RETAIL.DERVTN_SOURCE_CHANNL_DETAIL B
ON   A.MAC_CD = B.MAC_CD
AND  (A.DERVTN_CHANNL_GROUP_NM = B.DERVTN_CHANNL_GROUP_NM
OR   (A.DERVTN_CHANNL_GROUP_NM IS NULL AND B.DERVTN_CHANNL_GROUP_NM IS NULL))
AND  A.DERVTN_SOURCE_NM = B.DERVTN_SOURCE_NM
;

COLLECT STATS ON CC_COBRA.DERVTN_SOURCE_CHANNL_DETAIL INDEX( MAC_CD ,DERVTN_CHANNL_GROUP_NM );
*/

/*NEXT CHECK TO MAKE SURE ALL IN LIVE ARE IN CC_COBRA*/

SELECT MAC_CD, DERVTN_CHANNL_GROUP_NM, DERVTN_SOURCE_NM, SOURCE_START_DT, SOURCE_END_DT
FROM GRIDX_DV_RETAIL.DERVTN_SOURCE_CHANNL_DETAIL 
WHERE SOURCE_END_DT = '3500/12/31'
MINUS 
SELECT MAC_CD, DERVTN_CHANNL_GROUP_NM, DERVTN_SOURCE_NM, SOURCE_START_DT, SOURCE_END_DT
FROM CC_COBRA.DERVTN_SOURCE_CHANNL_DETAIL 
WHERE SOURCE_END_DT = '3500/12/31'
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR1A;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 01: DERVTN_SOURCE_CHANNL_DETAIL';

.GOTO SKIPREV1;

/*AND THEN CHECK THAT ALL IN CC_COBRA ARE IN LIVE*/

.LABEL NOERR1A;

SELECT MAC_CD, DERVTN_CHANNL_GROUP_NM, DERVTN_SOURCE_NM, SOURCE_START_DT, SOURCE_END_DT
FROM CC_COBRA.DERVTN_SOURCE_CHANNL_DETAIL 
WHERE SOURCE_END_DT = '3500/12/31'
MINUS 
SELECT MAC_CD, DERVTN_CHANNL_GROUP_NM, DERVTN_SOURCE_NM, SOURCE_START_DT, SOURCE_END_DT
FROM GRIDX_DV_RETAIL.DERVTN_SOURCE_CHANNL_DETAIL 
WHERE SOURCE_END_DT = '3500/12/31'
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR1B;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 01: DERVTN_SOURCE_CHANNL_DETAIL';

.GOTO SKIPREV1;

.LABEL NOERR1B;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 01: DERVTN_SOURCE_CHANNL_DETAIL';

.LABEL SKIPREV1;


/*STEP 02: CHECK DERVTN_SOURCE_CHANNL*/


SELECT CHANNL_GROUP_CD, CHANNL_GROUP_DS, DERVTN_CHANNL_GROUP_NM
FROM GRIDX_DV_RETAIL.DERVTN_SOURCE_CHANNL 
WHERE SOURCE_END_DT = '3500/12/31'
MINUS 
SELECT CHANNL_GROUP_CD, CHANNL_GROUP_DS, DERVTN_CHANNL_GROUP_NM
FROM CC_COBRA.DERVTN_SOURCE_CHANNL 
WHERE SOURCE_END_DT = '3500/12/31'
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR2A;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 02: DERVTN_SOURCE_CHANNL';

.GOTO SKIPREV2;

.LABEL NOERR2A;

SELECT CHANNL_GROUP_CD, CHANNL_GROUP_DS, DERVTN_CHANNL_GROUP_NM
FROM CC_COBRA.DERVTN_SOURCE_CHANNL 
WHERE SOURCE_END_DT = '3500/12/31'
MINUS 
SELECT CHANNL_GROUP_CD, CHANNL_GROUP_DS, DERVTN_CHANNL_GROUP_NM
FROM GRIDX_DV_RETAIL.DERVTN_SOURCE_CHANNL 
WHERE SOURCE_END_DT = '3500/12/31'
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR2B;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 02: DERVTN_SOURCE_CHANNL';

.GOTO SKIPREV2;

.LABEL NOERR2B;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 02: DERVTN_SOURCE_CHANNL';

.LABEL SKIPREV2;


/*STEP 03: CHECK TRNSCN_DERVTN_GROUPS*/

SELECT EVENT_ACTVTY_CD, TRNSCN_DERVTN_GRP, REVRSL_IN, END_DT
FROM CC_COBRA.TRNSCN_DERVTN_GROUPS WHERE EVENT_ACTVTY_CD NOT IN ('00502043','00502119','00502222') -- HBOS MIGRATION DIFFERENCE, KEEP DIFFERENT AS PPI USE THE LIVE VERSION
MINUS 
SELECT EVENT_ACTVTY_CD, TRNSCN_DERVTN_GRP, REVRSL_IN, END_DT
FROM GRIDX_DV_RETAIL.TRNSCN_DERVTN_GROUPS 
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR3A;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 03: TRNSCN_DERVTN_GROUPS';

.GOTO SKIPREV3;

.LABEL NOERR3A;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 03: TRNSCN_DERVTN_GROUPS';

.LABEL SKIPREV3;



/*STEP 04: CHECK CC_ISSUER_SORT_CODE_LOOKUP*/

SELECT CARD_ISSUER_SORT_CD, CARD_ISSUER_ACCONT_NO, CARD_ISSUER_NM, END_DT
FROM GDW_VIEWS.CC_ISSUER_SORT_CODE_LOOKUP 
MINUS 
SELECT CARD_ISSUER_SORT_CD, CARD_ISSUER_ACCONT_NO, CARD_ISSUER_NM, END_DT
FROM CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP 
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR4A;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 04: CC_ISSUER_SORT_CODE_LOOKUP';

.GOTO SKIPREV4;

.LABEL NOERR4A;

SELECT CARD_ISSUER_SORT_CD, CARD_ISSUER_ACCONT_NO, CARD_ISSUER_NM, END_DT
FROM CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP 
MINUS 
SELECT CARD_ISSUER_SORT_CD, CARD_ISSUER_ACCONT_NO, CARD_ISSUER_NM, END_DT
FROM GDW_VIEWS.CC_ISSUER_SORT_CODE_LOOKUP 
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR4B;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 04: CC_ISSUER_SORT_CODE_LOOKUP';

.GOTO SKIPREV4;

.LABEL NOERR4B;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 04: CC_ISSUER_SORT_CODE_LOOKUP';

.LABEL SKIPREV4;


/*STEP 05: CHECK EVENT_IDS ARE IN SYNC OR NOT*/

SELECT A.SOURCE_START_DT, B.SOURCE_START_DT, COUNT(*)
FROM CC_COBRA.CC_EVENTS_TO_EXCLUDE A
JOIN GDW_VIEWS.CC_MONETARY_TRANSACTION_HIST B
ON   A.EVENT_ID = B.EVENT_ID
AND ( A.EVENT_AM <> B.EVENT_AM
OR  A.AGRMNT_ID <> B.AGRMNT_ID
OR  A.SOURCE_START_DT <> B.SOURCE_START_DT)
GROUP BY 1,2
ORDER BY 1,2
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR5;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 05: EVENT_ID IN SYNC';

.GOTO SKIP5;

.LABEL NOERR5;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 05: EVENT_ID IN SYNC';

.LABEL SKIP5;


/*STEP 06: CHECK CC_PLAN_LOOKUP */

/*FIRST DELETE ANY RECORDS THAT HAVEN'T VALUES IN PLAN_NM OR BW_PLAN_TYPE_CD*/

DELETE
FROM CC_COBRA.CC_PLAN_LOOKUP
WHERE PLAN_NM IS NULL
OR    BW_PLAN_TYPE_CD IS NULL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/* INSERT NEW RECORDS*/
INSERT INTO CC_COBRA.CC_PLAN_LOOKUP
SELECT
SUBSTRING (T2.FEATUR_TX FROM 4 FOR 6) AS PLAN_NO
,CASE 
WHEN PLAN_NO = '10001' THEN 'CASH DEFAULT'
WHEN PLAN_NO = '10002' THEN 'RETAIL DEFAULT'
WHEN PLAN_NO = '10003' THEN 'BT EXPIRED'
WHEN PLAN_NO = '10004' THEN 'FEES POST DEFAULT'
WHEN PLAN_NO = '10005' THEN 'FEES EXPIRATION DEFAULT'
WHEN PLAN_NO = '10006' THEN 'FEES INTEREST CHARGED DEFAULT'
WHEN PLAN_NO = '10007' THEN 'INSTALMENT EXPIRED'
WHEN PLAN_NO = '10008' THEN 'MONEY TRANSFER EXPIRED'
WHEN PLAN_NO = '10013' THEN 'BT EXPIRED'              /*ADDED 20190320 JM*/
WHEN PLAN_NO = '10018' THEN 'MONEY TRANSFER EXPIRED'  /*ADDED 20190320 JM*/
WHEN PLAN_NO = '11001' THEN 'CASH DEFAULT PREFERENCE'
WHEN PLAN_NO = '11002' THEN 'RETAIL DEFAULT PREFERENCE'
WHEN PLAN_NO = '11003' THEN 'BT EXPIRED PREFERENCE'
WHEN PLAN_NO = '11004' THEN 'FEES POST DEFAULT PREFERENCE'
WHEN PLAN_NO = '11005' THEN 'FEES EXPIRATION DEFAULT PREFERENCE'
WHEN PLAN_NO BETWEEN '15000' AND '19999' THEN 'BT STANDARD'
WHEN PLAN_NO BETWEEN '20000' AND '24999' THEN 'RETAIL NEW SPEND ONLY'
WHEN PLAN_NO BETWEEN '25000' AND '29999' THEN 'BT CONDITIONAL OFFER'
WHEN PLAN_NO BETWEEN '30000' AND '34999' THEN 'RETAIL INTRO OFFERS'
WHEN PLAN_NO BETWEEN '35000' AND '39999' THEN 'RETAIL MERCHANT SPEND OFFERS'
WHEN PLAN_NO BETWEEN '40000' AND '49999' THEN 'MERCHANT SPEND OFFERS'
WHEN PLAN_NO BETWEEN '50000' AND '54999' THEN 'MONEY TRANSFER'
WHEN PLAN_NO BETWEEN '55000' AND '59999' THEN 'INSTALMENT PLAN OFFERS'
WHEN ORG_TX IN ('190','195')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4302' THEN 'BT - B2K MIGRATION'
WHEN ORG_TX IN ('190','195')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4307' THEN 'RETAIL - PROMO B2K MIGRATION'
WHEN ORG_TX IN ('190','195')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4303' THEN 'CASH - PROMO B2K MIGRATION'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4302' THEN 'BT - MBNA MIGRATION'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4307' THEN 'RETAIL - PROMO MBNA MIGRATION'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4303' THEN 'CASH - PROMO MBNA MIGRATION'
ELSE NULL
END AS PLAN_NM
,CASE
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60000' AND '60099' 
     THEN 'BT STANDARD'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60100' AND '60199' 
     THEN 'MONEY TRANSFER'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60200' AND '60299' 
     THEN 'RETAIL INTRO OFFERS'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60300' AND '60399' 
     THEN 'CASH OFFER'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '70000' AND '79999' 
     THEN 'RETAIL INTRO OFFERS'  
ELSE NULL END AS PLAN_DS
,SUBSTRING (T2.FEATUR_TX FROM 1 FOR 3) AS ORG_TX	
,CASE 
WHEN PLAN_NO = '10001' THEN 'C'
WHEN PLAN_NO = '10002' THEN 'R'
WHEN PLAN_NO = '10003' THEN 'X'
WHEN PLAN_NO = '10004' THEN 'F'
WHEN PLAN_NO = '10005' THEN 'F'
WHEN PLAN_NO = '10006' THEN 'F'
WHEN PLAN_NO = '10007' THEN 'R'
WHEN PLAN_NO = '10008' THEN 'Q'
WHEN PLAN_NO = '11001' THEN 'C'
WHEN PLAN_NO = '11002' THEN 'R'
WHEN PLAN_NO = '11003' THEN 'X'
WHEN PLAN_NO = '11004' THEN 'F'
WHEN PLAN_NO = '11005' THEN 'F'
WHEN PLAN_NO = '10013' THEN 'X' /*ADDED 20190320 JM*/
WHEN PLAN_NO = '10018' THEN 'Q' /*ADDED 20190320 JM*/
WHEN PLAN_NO BETWEEN '15000' AND '19999' THEN 'B'
WHEN PLAN_NO BETWEEN '20000' AND '24999' THEN 'P'
WHEN PLAN_NO BETWEEN '25000' AND '29999' THEN 'B'
WHEN PLAN_NO BETWEEN '30000' AND '34999' THEN 'P'
WHEN PLAN_NO BETWEEN '35000' AND '39999' THEN 'P'
WHEN PLAN_NO BETWEEN '40000' AND '49999' THEN 'P'
WHEN PLAN_NO BETWEEN '50000' AND '54999' THEN 'M'  --change JM 2017-05-22
WHEN PLAN_NO BETWEEN '55000' AND '59999' THEN 'I'  --change JM 2017-05-22
WHEN ORG_TX IN ('190','195')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4302' THEN 'B'
WHEN ORG_TX IN ('190','195')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4307' THEN 'P'
WHEN ORG_TX IN ('190','195')
     AND PLAN_NO BETWEEN '60000' AND '79999' 
     AND T3.RELATD_FEATUR_ID = '4303' THEN 'C'
 
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60000' AND '60099' 
     THEN 'B'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60100' AND '60199' 
     THEN 'M'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60200' AND '60299' 
     THEN 'P'
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '60300' AND '60399' 
     THEN 'P' /*check this value - was Cash but moved to promo due to low balance*/
WHEN ORG_TX IN ('180')
     AND PLAN_NO BETWEEN '70000' AND '79999' 
     THEN 'P'    
     
END AS BW_PLAN_TYPE_CD

FROM 	GDW_VIEWS.FEATURE T1		
JOIN 	GDW_VIEWS.DESCRIPTIVE_FEATURE T2		
ON 		T1.FEATUR_ID = T2.FEATUR_ID 
AND 	T1.FEATUR_NM = 'VISION+ PLAN'
AND 	T1.SOURCE_END_DT = '3500/12/31'
AND 	T2.SOURCE_END_DT = '3500/12/31'	
AND     SUBSTRING (T2.FEATUR_TX FROM 1 FOR 3) IN ('120','190','195','180')
JOIN 	GDW_VIEWS.FEATURE_RELATIONSHIP T3		
ON 		T1.FEATUR_ID = T3.FEATUR_ID 		
AND 	T3.RELATD_FEATUR_ID IN ('4302','4303','4305','4307')
WHERE   NOT EXISTS (
SELECT  NULL FROM
(
SELECT *
FROM    CC_COBRA.CC_PLAN_LOOKUP
WHERE   PLAN_NM <> 'UNKNOWN'
AND     BW_PLAN_TYPE_CD IS NOT NULL) T4
WHERE 	T4.PLAN_NO = SUBSTRING (T2.FEATUR_TX FROM 4 FOR 6)		
AND 	T4.ORG_TX = SUBSTRING (T2.FEATUR_TX FROM 1 FOR 3) 
) 
AND PLAN_NO NOT IN ('90003','90008','99990')
GROUP BY 1,2,3,4,5
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT *
FROM CC_COBRA.CC_PLAN_LOOKUP
WHERE PLAN_NM IS NULL
OR    BW_PLAN_TYPE_CD IS NULL;

.IF ACTIVITYCOUNT <> 0 THEN .GOTO ERR6;

SELECT *
FROM 
(SELECT A.ORG_TX
      ,A.ORIGNL_PLAN_NO
      ,AFF.AGRMNT_FEATUR_FEATUR_NO AS CURRENT_PLAN_NO
      ,MIN(AFF.SOURCE_START_DT) AS MIN_SSD
      ,MAX(AFF.SOURCE_START_DT) AS MAX_SSD
      ,COUNT(*) AS VOLUME
FROM GDW_VIEWS.CC_CREDIT_PLAN_LOOKUP A
JOIN GDW_VIEWS.AGREEMENT_FEATURE_FEATURE AFF
ON   A.FEATUR_ID = AFF.FEATUR_ID
AND  AFF.RELATD_FEATUR_ID = 5018
AND  SOURCE_START_DT >= (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND  AFF.EXPIRY_DT IS NULL /*ONLY RECORDS USED THAT AREN'T PURGE RECORDS*/
AND  A.ORG_TX NOT IN ('170') /* SB to exclude tsb data that has suddenly appeared. 31/05/2015 */
GROUP BY 1,2,3) A
WHERE NOT EXISTS (
SELECT NULL
FROM CC_COBRA.CC_PLAN_LOOKUP B
WHERE   A.CURRENT_PLAN_NO = B.PLAN_NO
AND  A.ORG_TX = B.ORG_TX)
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR6;

.LABEL ERR6;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 06: CC_COBRA.CC_PLAN_LOOKUP FULL';

.GOTO SKIP6;

.LABEL NOERR6;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 06: CC_COBRA.CC_PLAN_LOOKUP FULL';

.LABEL SKIP6;

/*STEP 07: CC_PLAN_LOOKUP SYNC CHECK*/

SELECT ORG_TX
     , PLAN_NO
     , PLAN_NM
FROM CC_COBRA.CC_PLAN_LOOKUP 
MINUS 
SELECT ORG_TX
     , PLAN_NO
     , CASE WHEN PLAN_NM = 'INTRO OFFERS RETAIL' THEN 'RETAIL INTRO OFFERS' --ADJUST THIS VALUE SO IT MATCHES WITH CC_COBRA
            WHEN PLAN_NM = 'MERCHANT SPEND OFFERS' THEN 'RETAIL MERCHANT SPEND OFFERS' --ADJUST THIS VALUE SO IT MATCHES WITH CC_COBRA
            ELSE PLAN_NM
       END AS PLAN_NM
FROM GRIDX_DV_RETAIL.CC_PLAN_LOOKUP 
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR7;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'N'
WHERE TABLE_NM = 'STEP 07: CC_PLAN_LOOKUP';

.GOTO SKIP7;

.LABEL NOERR7;

UPDATE CC_COBRA.CC_REF_DATA_LIVE_SYNC
SET SYNC_IN = 'Y'
WHERE TABLE_NM = 'STEP 07: CC_PLAN_LOOKUP';

.LABEL SKIP7;


/*STEP 08: 90003 PLAN CHECK*/

SELECT *
FROM 
(SELECT A.ORG_TX
      ,A.ORIGNL_PLAN_NO
      ,AFF.AGRMNT_FEATUR_FEATUR_NO AS CURRENT_PLAN_NO
      ,MIN(AFF.SOURCE_START_DT) AS MIN_SSD
      ,MAX(AFF.SOURCE_START_DT) AS MAX_SSD
      ,COUNT(*) AS VOLUME
FROM GDW_VIEWS.CC_CREDIT_PLAN_LOOKUP A
JOIN GDW_VIEWS.AGREEMENT_FEATURE_FEATURE AFF
ON   A.FEATUR_ID = AFF.FEATUR_ID
AND  AFF.RELATD_FEATUR_ID = 5018
AND  AFF.SOURCE_START_DT >= (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND  AFF.EXPIRY_DT IS NULL /*ONLY RECORDS USED THAT AREN'T PURGE RECORDS*/
AND  A.ORG_TX NOT IN ('170') /* SB to exclude tsb data that has suddenly appeared. 31/05/2015 */
GROUP BY 1,2,3) A
WHERE  A.CURRENT_PLAN_NO IN ('90003','90008')
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERR8;

.LABEL ERR8;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J11P'
;

.GOTO SKIP8;

.LABEL NOERR8;


UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'C01J11P'
;

.LABEL SKIP8;

/*************************************************/

SELECT *
FROM CC_COBRA.CC_REF_DATA_LIVE_SYNC
WHERE SYNC_IN = 'N'
;
.IF ACTIVITYCOUNT = 0 THEN .GOTO NOERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J11S'
;
.GOTO SKIPERR;

.LABEL NOERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'C01J11S'
;

.LABEL SKIPERR;

/*UPDATE THE LOAD LOG TO THE CURRENT DATE TO INDICATE SUCCESSFUL PROCESSING*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'C01J11'
;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT  
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'C01J11';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J11'
;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J11S'
;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J11P'
;

.QUIT 0;
