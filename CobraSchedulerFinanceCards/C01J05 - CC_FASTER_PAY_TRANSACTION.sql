/************************************************************************/
/*JOB:      C01J05 - CC_FASTER_PAY_TRANSACTION                          */
/*VERSION:  C01J05v05 - add card_id and deduplicate.sql                 */
/*DATE VERSION IMPLEMENTED: 2017-02-17                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*                                                                      */
/*                                                                      */
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*STEP 02: INITIAL CHECKS TO SEE IF THIS JOB HAS ALREADY RUN SUCCESSFULLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J05';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'C01J05'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 03: COLLECT DATA FROM LAST 5 DAYS INTO WORK TABLE*/

/*
CREATE SET TABLE CC_COBRA.WK_CC_AUTOMATED_PAYMENTS_T1 ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      CARD_NO CHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC,
      CARD_ID INTEGER,
      RMTTNG_BANK_SORT_CD CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
      RMTTNG_BANK_ACCONT_NO CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC,
      SERIAL_NO CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC,
      ORGNTR_NM CHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC,
      EVENT_START_DT DATE FORMAT 'YYYY/MM/DD',
      EVENT_START_TM INTEGER FORMAT '99:99:99',
      EVENT_ACTVTY_CD CHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,
      EVENT_CATGRY_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC,
      EVENT_STATUS_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC,
      EVENT_STATUS_REASON_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC,
      CHANNL_ID INTEGER,
      EVENT_AM DECIMAL(15,2),
      EVENT_AM_TYPE_IN CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
      SOURCE_START_DT DATE FORMAT 'YYYY/MM/DD',
      SOURCE_START_TM INTEGER FORMAT '99:99:99' DEFAULT NULL  COMPRESS ,
      TRN_REF_NO CHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC,
      PMT_TYP_CD CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC,
      CCY_CD CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
      SND_FPS_ITN_CD CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC)
PRIMARY INDEX ( CARD_ID );
*/

DELETE FROM CC_COBRA.WK_CC_AUTOMATED_PAYMENTS_T1 ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

INSERT INTO CC_COBRA.WK_CC_AUTOMATED_PAYMENTS_T1
SELECT REF_INF_TX
      ,B.CARD_ID
      ,ORI_CRD_ITN_CD
      ,ORI_CST_ACC_NO
      ,NULL
      ,ORI_CST_ACC_NM
      ,SNT_DT
      ,NULL
      ,'00599'
      ,'00000005'
      ,NULL
      ,NULL
      ,NULL
      ,TRN_AM
      ,'1'
      ,SNT_DT
      ,NULL
      ,TRN_REF_NO
      ,PMT_TYP_CD
      ,CCY_CD
      ,SND_FPS_ITN_CD
      
FROM FAST_PAY_VIEWSP.FASTER_PAYMENT_TXN A
JOIN GDW_VIEWS.CC_CARD_LOOKUP B
ON   TRIM((CASE WHEN SUBSTR(A.REF_INF_TX,1,1) = '0' THEN SUBSTR(A.REF_INF_TX,2,16) ELSE A.REF_INF_TX END)) = B.CARD_NO
WHERE A.DST_CD IN ('16')
AND SNT_DT >= DATE-5;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.WK_CC_AUTOMATED_PAYMENTS_T1 INDEX ( CARD_ID );

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/*STEP 04: LOAD DATA INTO CC_COBRA TABLE */

/*
CREATE SET TABLE CC_COBRA.CC_FASTER_PAY_TRANSACTION ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO
     (
      AGRMNT_ID INTEGER,
      CARD_ID INTEGER,
      EVENT_ID BIGINT NOT NULL,
      DUP_IND BYTEINT COMPRESS 0 ,
      RMTTNG_BANK_SORT_CD CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('070116','090126','090128','110001','203253','301875','400250'),
      RMTTNG_BANK_ACCONT_NO CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('00003955','03617416','41357921'),
      SERIAL_NO CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '    ',
      ORGNTR_NM CHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC,
      EVENT_START_DT DATE FORMAT 'YYYY/MM/DD',
      EVENT_START_TM INTEGER FORMAT '99:99:99',
      EVENT_ACTVTY_CD CHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '00599     ',
      EVENT_CATGRY_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '00000005',
      EVENT_STATUS_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '        ',
      EVENT_STATUS_REASON_CD CHAR(8) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '        ',
      CHANNL_ID INTEGER COMPRESS 0 ,
      EVENT_AM DECIMAL(15,2) COMPRESS (100.00 ,200.00 ,50.00 ,150.00 ,30.00 ,20.00 ),
      EVENT_AM_TYPE_IN CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS '1',
      START_DT DATE FORMAT 'YYYY/MM/DD' NOT NULL,
      START_TM INTEGER FORMAT '99:99:99' NOT NULL DEFAULT 1 ,
      SOURCE_START_DT DATE FORMAT 'YYYY/MM/DD',
      SOURCE_START_TM INTEGER FORMAT '99:99:99' DEFAULT NULL  COMPRESS ,
      TRN_REF_NO CHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC,
      PMT_TYP_CD CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('10','30','40'),
      CCY_CD CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS 'GBP',
      SND_FPS_ITN_CD CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('070116     ','090126     ','090128     ','200000     ','203253     ','400250     '))
PRIMARY INDEX ( AGRMNT_ID )
PARTITION BY RANGE_N(EVENT_START_DT  BETWEEN DATE '2015-01-01' AND DATE '2020-12-31' EACH INTERVAL '1' MONTH )
UNIQUE INDEX ( EVENT_ID );
*/

/*UPDATE LOAD REF TABLE IN CASE OF RESYNCING FROM BOX 1*/

UPDATE CC_COBRA.CC_EVENT_ID_LOAD_REF
SET LOAD_REF = (SELECT MIN(EVENT_ID) FROM  CC_COBRA.CC_FASTER_PAY_TRANSACTION)
WHERE LOAD_REF <> (SELECT MIN(EVENT_ID) FROM  CC_COBRA.CC_FASTER_PAY_TRANSACTION)
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT * FROM CC_COBRA.CC_EVENT_ID_LOAD_REF;


/*INSERT DATA INTO MAIN TABLE*/

INSERT INTO CC_COBRA.CC_FASTER_PAY_TRANSACTION
SELECT *
FROM 
(SELECT 
B.AGRMNT_ID
,A.CARD_ID
,X.LOAD_REF + CSUM(-1,A.SOURCE_START_DT,TRN_REF_NO,PMT_TYP_CD,CCY_CD,SND_FPS_ITN_CD,EVENT_AM) AS EVENT_ID
,RANK () OVER (PARTITION BY A.SOURCE_START_DT,A.TRN_REF_NO,A.EVENT_AM ORDER BY PMT_TYP_CD, ORGNTR_NM DESC) -1 AS DUP_IND
,RMTTNG_BANK_SORT_CD 
,RMTTNG_BANK_ACCONT_NO 
,SERIAL_NO 
,ORGNTR_NM 
,EVENT_START_DT 
,EVENT_START_TM
,EVENT_ACTVTY_CD 
,EVENT_CATGRY_CD 
,EVENT_STATUS_CD
,EVENT_STATUS_REASON_CD
,CHANNL_ID
,EVENT_AM 
,EVENT_AM_TYPE_IN 
,DATE AS START_DT
,TIME AS START_TM
,A.SOURCE_START_DT
,A.SOURCE_START_TM 
,A.TRN_REF_NO
,A.PMT_TYP_CD
,A.CCY_CD
,A.SND_FPS_ITN_CD
FROM   CC_COBRA.WK_CC_AUTOMATED_PAYMENTS_T1 A
JOIN   GDW_VIEWSX.AGREEMENT_CARD B
ON     A.CARD_ID = B.CARD_ID
AND    B.AGRMNT_CARD_ROLE_CD = '00000001'
AND    B.SOURCE_END_DT = '3500/12/31'
CROSS JOIN CC_COBRA.CC_EVENT_ID_LOAD_REF X
) A
WHERE NOT EXISTS (
SELECT NULL
FROM CC_COBRA.CC_FASTER_PAY_TRANSACTION C
WHERE A.TRN_REF_NO = C.TRN_REF_NO
AND   A.PMT_TYP_CD = C.PMT_TYP_CD
AND   A.CCY_CD = C.CCY_CD
AND   A.SND_FPS_ITN_CD = C.SND_FPS_ITN_CD
AND   A.SOURCE_START_DT = C.SOURCE_START_DT
AND   A.DUP_IND = C.DUP_IND
);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.CC_FASTER_PAY_TRANSACTION INDEX ( AGRMNT_ID );
COLLECT STATS ON CC_COBRA.CC_FASTER_PAY_TRANSACTION INDEX ( EVENT_ID );


UPDATE CC_COBRA.CC_EVENT_ID_LOAD_REF
SET LOAD_REF = (SELECT MIN(EVENT_ID) FROM  CC_COBRA.CC_FASTER_PAY_TRANSACTION)
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT * FROM CC_COBRA.CC_EVENT_ID_LOAD_REF;

/*STEP 05: ONLY KEEP 6 MONTHS OF DATA*/

DELETE FROM CC_COBRA.CC_FASTER_PAY_TRANSACTION 
WHERE SOURCE_START_DT < ADD_MONTHS(DATE,-6);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 06: INSERT FASTER PAYMENTS BT OUTS INTO CC_COBRA TABLE*/

INSERT INTO CC_COBRA.CC_BT_OUT_TRANSACTION
SELECT 'F'
      ,A.AGRMNT_ID
      ,A.EVENT_ID
      ,A.RMTTNG_BANK_SORT_CD 
      ,A.RMTTNG_BANK_ACCONT_NO 
      ,A.SERIAL_NO
      ,A.ORGNTR_NM 
      ,A.EVENT_START_DT 
      ,A.EVENT_START_TM 
      ,A.EVENT_ACTVTY_CD 
      ,A.EVENT_CATGRY_CD 
      ,A.EVENT_STATUS_CD 
      ,A.EVENT_STATUS_REASON_CD 
      ,A.CHANNL_ID 
      ,A.EVENT_AM 
      ,A.EVENT_AM_TYPE_IN 
      ,A.START_DT 
      ,A.START_TM
      ,A.SOURCE_START_DT
      ,A.SOURCE_START_TM 
FROM CC_COBRA.CC_FASTER_PAY_TRANSACTION A
JOIN CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP B

ON   (A.RMTTNG_BANK_SORT_CD = B.CARD_ISSUER_SORT_CD
AND  A.RMTTNG_BANK_ACCONT_NO = B.CARD_ISSUER_ACCONT_NO
AND  A.SOURCE_START_DT BETWEEN B.START_DT AND B.END_DT-1)

OR   (A.RMTTNG_BANK_SORT_CD = B.CARD_ISSUER_SORT_CD
AND  B.CARD_ISSUER_ACCONT_NO = 'XXX'
AND  A.SOURCE_START_DT BETWEEN B.START_DT AND B.END_DT-1) --VIRGIN - CODE CHANGED BY JM 20/10/2015. 

WHERE NOT EXISTS (
SELECT NULL
FROM CC_COBRA.CC_BT_OUT_TRANSACTION C
WHERE A.EVENT_ID = C.EVENT_ID)
AND DUP_IND = 0 --ADDED 2017/02/17 JM
;


.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 07: CHECK TO SEE IF ALL FASTER PAY BT OUT REFERENCE DATA HAS BEEN PICKED UP IE.*/
/*CHECK TO SEE IF ANY SORTCODE/ACCOUNT NUMBERS HAVE APPEARED THAT WE NEED TO INCLUDE IN REF DATA TABLE FROM THE FASTER PAY DATA SOURCE*/


SELECT T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO, B.ORGNTR_NM, COUNT(*) AS VOLUME, SUM(B.EVENT_AM)
FROM
/*PULL IN SORT CODES/ACCOUNT NOS FROM ABOVE*/
(
		SELECT T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO
		FROM
		/*PULL IN SORT CODES/ACCOUNT NOS WHERE THERE ARE MORE THAN 250*/
		(
		SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO
		FROM
			/*FIND RECORDS WHERE THERE ARE ONLY A FEW FOR EACH AGRMNT_ID - EXCLUDES AGRMNT_ID PAYING IN MONTHLY AMOUNTS*/
			(
			SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO, AGRMNT_ID, COUNT(*) AS VOL, SUM(EVENT_AM) AS AMT
			FROM  CC_COBRA.CC_FASTER_PAY_TRANSACTION
			WHERE EVENT_AM >= 100
			GROUP BY 1,2,3
			HAVING COUNT(*) < 5
			) A
		GROUP BY 1,2
		HAVING COUNT(*) > 250
		) T1
		
		JOIN CC_COBRA.CC_FASTER_PAY_TRANSACTION B
		ON     T1.RMTTNG_BANK_SORT_CD = B.RMTTNG_BANK_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = B.RMTTNG_BANK_ACCONT_NO
		
		WHERE 
		/*EXCLUDE ONES THAT HAVE MORE THAN 250 EXAMPLES OF MULTIPLE PAYMENTS (>5)*/
		NOT EXISTS 
		(
		SELECT NULL
		FROM
		(
		SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO
		FROM
			/*FIND RECORDS WHERE THERE ARE ONLY A FEW FOR EACH AGRMNT_ID - EXCLUDES AGRMNT_ID PAYING IN MONTHLY AMOUNTS*/
			(
			SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO, AGRMNT_ID, COUNT(*) AS VOL, SUM(EVENT_AM) AS AMT
			FROM   CC_COBRA.CC_FASTER_PAY_TRANSACTION
			WHERE EVENT_AM >= 100
			GROUP BY 1,2,3
			HAVING COUNT(*) >= 5
			) A
		GROUP BY 1,2
		HAVING COUNT(*) > 250
		) D
		WHERE     T1.RMTTNG_BANK_SORT_CD = D.RMTTNG_BANK_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = D.RMTTNG_BANK_ACCONT_NO
		)
		AND
		/*WHERE THE SORT CODE AND ACCOUNT NO DOES NOT EXIST IN THE LOOKUP*/
		NOT EXISTS (
		SELECT NULL
		FROM CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP C
		WHERE     T1.RMTTNG_BANK_SORT_CD = C.CARD_ISSUER_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = C.CARD_ISSUER_ACCONT_NO
		)
		
		AND		NOT EXISTS (
		SELECT NULL
		FROM CC_COBRA.WK_CC_ISSUER_SORT_CODE_REMOVE C2
		WHERE     T1.RMTTNG_BANK_SORT_CD = C2.CARD_ISSUER_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = C2.CARD_ISSUER_ACCONT_NO
		)

		
		GROUP BY T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO
		HAVING SUM(EVENT_AM)/COUNT(*) >=1000
) T1

JOIN  CC_COBRA.CC_FASTER_PAY_TRANSACTION B
ON     T1.RMTTNG_BANK_SORT_CD = B.RMTTNG_BANK_SORT_CD
AND    T1.RMTTNG_BANK_ACCONT_NO = B.RMTTNG_BANK_ACCONT_NO

GROUP BY T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO,B.ORGNTR_NM
ORDER BY 1,2,3
;

.IF ACTIVITYCOUNT <> 0 THEN .GOTO FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'C01J05'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT  
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'C01J05';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J05'
;

.QUIT 0;



