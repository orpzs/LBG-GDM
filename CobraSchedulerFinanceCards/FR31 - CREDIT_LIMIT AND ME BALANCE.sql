/************************************************************************/
/*JOB:      FR31 - PREFERENCE SPOT BALANCE                              */
/*VERSION:  FR31v02 - fix for month end on weekend.sql                  */
/*DATE VERSION IMPLEMENTED: 2015-11-10                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*C01J02                                                                */
/*C01J04                                                                */
/*C01J14                                                                */
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: CHECK PRIOR JOBS FOR COMPLETION*/

/*INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF CC_EVENTS_TO_EXCLUDE IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J04';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF CC_AGREEMENT_ME_SNAPSHOT IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J14';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF CC_AGREEMENT_ADDED_DATE IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J02';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF THIS JOB HAS ALREADY RUN SUCCESSFULLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR31';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*STEP 02: CHECKS TO SEE IF WORKING DAY IS WD1 */

SELECT * FROM CC_COBRA.GRID_REPORTS_CONTROL 
WHERE (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT) = PRIOR_WORKDAY_DT
AND WORKDAY_OF_MONTH = 1;

.IF ACTIVITYCOUNT = 0 THEN .GOTO SKIPJOB;


/*UPDATE START_DT AND TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'FR31'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/*STEP 03: UPDATE DATE PARAMETER TABLE*/

/*
CREATE SET TABLE CC_COBRA.WK_FR31_REPORT_DATE ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      REPORT_DT DATE FORMAT 'YY/MM/DD')
UNIQUE PRIMARY INDEX ( REPORT_DT );

*/

UPDATE CC_COBRA.WK_FR31_REPORT_DATE
SET REPORT_DT =  (SELECT ADD_MONTHS(CAST((SOURCE_START_DT/100*100)+1 AS DATE),1)-1 FROM CC_COBRA.CC_COBRA_LOAD_START_DT);         
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.WK_FR31_REPORT_DATE INDEX(REPORT_DT);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*DISPLAY DATE INSERTED ABOVE FOR OUTPUT*/

SELECT * FROM CC_COBRA.WK_FR31_REPORT_DATE;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 04: REFERENCE DATA FOR EXCEL*/

/*
CREATE TABLE CC_COBRA.CC_BLOCK_CODE_1_LKUP (
BLOCK_CD_1 CHAR
,BLOCK_CD_DESC VARCHAR(500)
) UNIQUE PRIMARY INDEX( BLOCK_CD_1 )
;

INSERT INTO CC_COBRA.CC_BLOCK_CODE_1_LKUP
SELECT AGRMNT_STATUS_SUMMRY_VL,AGRMNT_STATUS_SUMMRY_VL_NR FROM GDW_VIEWS.AGRMNT_STATUS_SUMMRY_DETAIL WHERE AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500023';

COLLECT STATS ON  CC_COBRA.CC_BLOCK_CODE_1_LKUP INDEX( BLOCK_CD_1 );

CREATE TABLE CC_COBRA.CC_BLOCK_CODE_2_LKUP (
BLOCK_CD_2 CHAR
,BLOCK_CD_DESC VARCHAR(500)
) UNIQUE PRIMARY INDEX( BLOCK_CD_2 )
;

INSERT INTO CC_COBRA.CC_BLOCK_CODE_2_LKUP
SELECT AGRMNT_STATUS_SUMMRY_VL,AGRMNT_STATUS_SUMMRY_VL_NR FROM GDW_VIEWS.AGRMNT_STATUS_SUMMRY_DETAIL WHERE AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500024';

COLLECT STATS ON  CC_COBRA.CC_BLOCK_CODE_2_LKUP INDEX( BLOCK_CD_2 );

CREATE TABLE CC_COBRA.CC_INTERNAL_STATUS_LKUP (
INT_STATUS CHAR
,INT_STATUS_DESC VARCHAR(500)
) UNIQUE PRIMARY INDEX( INT_STATUS )
;

INSERT INTO CC_COBRA.CC_INTERNAL_STATUS_LKUP
SELECT AGRMNT_STATUS_SUMMRY_VL,AGRMNT_STATUS_SUMMRY_VL_NR FROM GDW_VIEWS.AGRMNT_STATUS_SUMMRY_DETAIL WHERE AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500026';

COLLECT STATS ON  CC_COBRA.CC_INTERNAL_STATUS_LKUP INDEX( INT_STATUS );
*/

/*STEP 05: AGGREGATE DATA*/
/* 
CREATE TABLE CC_COBRA.FR31_CREDIT_LIMIT_SPOT_BAL (
 REPORT_DT DATE
,ORG_TX CHAR(3) 
,CREDIT_CARD_LOGO_CD SMALLINT 
,BLOCK_CD_1 CHAR(1) COMPRESS ('C',NULL,'Z','L','W','Y','I','U','D','G')
,BLOCK_CD_2 CHAR(1) COMPRESS (NULL,'Q','Z','P','N','G','C')
,INT_STATUS CHAR(1) COMPRESS (NULL,'A','F','8','Z','D','X','9','T')
,BAL_TYPE CHAR(2) COMPRESS ('DR','CR')
,VOLUME INTEGER
,SUM_CREDIT_LIMIT_AM DECIMAL(15,2)
,SUM_SPOT_BAL_AM DECIMAL(15,2))
PRIMARY INDEX(REPORT_DT,ORG_TX,CREDIT_CARD_LOGO_CD);
*/


DELETE FROM CC_COBRA.FR31_CREDIT_LIMIT_SPOT_BAL WHERE REPORT_DT =(SELECT REPORT_DT FROM CC_COBRA.WK_FR31_REPORT_DATE);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

INSERT INTO CC_COBRA.FR31_CREDIT_LIMIT_SPOT_BAL
SELECT
 D.REPORT_DT
,A.ORG_TX
,A.CREDIT_CARD_LOGO_CD
,B.BLOCK_CD_1 
,B.BLOCK_CD_2
,B.INT_STATUS_CD
,CASE WHEN ME_BAL_AM > 0 THEN 'CR'
      ELSE 'DR' END AS BAL_TYPE
,COUNT(A.AGRMNT_ID)
,SUM(B.CREDIT_LIMIT_AM)
,SUM(B.ME_BAL_AM) 

FROM CC_COBRA.CC_AGREEMENT_ADDED_DATE A
JOIN CC_COBRA.WK_FR31_REPORT_DATE D
ON   A.ADDED_DT <= D.REPORT_DT
JOIN CC_COBRA.CC_AGREEMENT_ME_SNAPSHOT B
ON   A.AGRMNT_ID = B.AGRMNT_ID
AND  D.REPORT_DT = B.PERIOD_END_DT
GROUP BY 1,2,3,4,5,6,7
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.FR31_CREDIT_LIMIT_SPOT_BAL INDEX(REPORT_DT,ORG_TX,CREDIT_CARD_LOGO_CD);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*FOR EXCEL*/

/*
SELECT 
 A.REPORT_DT
,A.ORG_TX
,A.CREDIT_CARD_LOGO_CD
,A.BLOCK_CD_1 AS BLK_CODE_1
,BC1.BLOCK_CD_DESC AS BLK_CODE_1_DESC
,A.BLOCK_CD_2 AS BLK_CODE_2
,BC2.BLOCK_CD_DESC AS BLK_CODE_2_DESC
,A.INT_STATUS AS INTERNAL_STATUS
,ISC.INT_STATUS_DESC AS INTERNAL_STATUS_DESC
,A.BAL_TYPE
,A.VOLUME 
,A.SUM_CREDIT_LIMIT_AM
,A.SUM_SPOT_BAL_AM

FROM (SELECT * FROM CC_COBRA.FR31_CREDIT_LIMIT_SPOT_BAL WHERE ORG_TX = '190' AND CREDIT_CARD_LOGO_CD = 505) A
LEFT JOIN CC_COBRA.CC_BLOCK_CODE_1_LKUP BC1
ON   A.BLOCK_CD_1 = BC1.BLOCK_CD_1
LEFT JOIN CC_COBRA.CC_BLOCK_CODE_2_LKUP BC2
ON   A.BLOCK_CD_2 = BC2.BLOCK_CD_2
LEFT JOIN CC_COBRA.CC_INTERNAL_STATUS_LKUP ISC
ON   A.INT_STATUS = ISC.INT_STATUS;
*/


/*UPDATE THE LOG TABLE IF IT HAS RUN OK!*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'FR31'
;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT   
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'FR31';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'FR31'
;

.QUIT 0;

