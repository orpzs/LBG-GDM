/************************************************************************/
/*JOB:      FR20 - INTERCHANGE FEE ANALYSIS                             */
/*VERSION:  FR20v01.sql                                                 */
/*DATE VERSION IMPLEMENTED: 2013-08-03                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*C01J02                                                                */
/*C01J04                                                                */
/*FR14                                                                  */
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: CHECK PRIOR JOBS FOR COMPLETION*/

/*INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF CC_EVENTS_TO_EXCLUDE IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J04';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF FR14 IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR14';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF CC_AGREEMENT_ADDED_DATE IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J02';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF THIS JOB HAS ALREADY RUN SUCCESSFULLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR20';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*STEP 02: CHECKS TO SEE IF WORKING DAY IS WD1 */

SELECT * FROM CC_COBRA.GRID_REPORTS_CONTROL 
WHERE (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT) = PRIOR_WORKDAY_DT
AND WORKDAY_OF_MONTH = 1;

.IF ACTIVITYCOUNT = 0 THEN .GOTO SKIPJOB;


/*UPDATE START_DT AND TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'FR20'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/*STEP 03: UPDATE DATE PARAMETER TABLE*/

/*
CREATE SET TABLE CC_COBRA.WK_FR20_REPORT_DATE ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT
     (
      REPORT_DT DATE FORMAT 'YY/MM/DD')
UNIQUE PRIMARY INDEX ( REPORT_DT );
*/

UPDATE CC_COBRA.WK_FR20_REPORT_DATE
SET REPORT_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT);         
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.WK_FR20_REPORT_DATE INDEX(REPORT_DT);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*DISPLAY DATE INSERTED ABOVE FOR OUTPUT*/

SELECT * FROM CC_COBRA.WK_FR20_REPORT_DATE;

/*COLLECT TRANSACTIONS FOR MONTH - MORE EFFICIENT TO BREAK INTO TWO STEPS*/

DELETE FROM CC_COBRA.CC_MONETARY_TRANSACTION_LM ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

INSERT INTO CC_COBRA.CC_MONETARY_TRANSACTION_LM (
	AGRMNT_ID
,	EVENT_ID
,	MRCHNT_CONTRY_CD
,	POSTNG_DT
,	EVENT_START_DT
,	EVENT_ACTVTY_CD
,	EVENT_AM
,	SOURCE_START_DT
,	START_DT
)
SELECT 
	AGRMNT_ID
,	EVENT_ID
,	MRCHNT_CONTRY_CD
,	POSTNG_DT
,	EVENT_START_DT
,	EVENT_ACTVTY_CD
,	EVENT_AM
,	SOURCE_START_DT
,	START_DT
FROM		GDW_VIEWS.CC_MONETARY_TRANSACTION_HIST TRAN
JOIN        CC_COBRA.WK_FR20_REPORT_DATE DC
ON			DC.REPORT_DT/100 = TRAN.SOURCE_START_DT/100		
WHERE       NOT EXISTS (
						SELECT NULL
                        FROM  CC_COBRA.CC_EVENTS_TO_EXCLUDE E
                        WHERE TRAN.EVENT_ID = E.EVENT_ID
                        )
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.CC_MONETARY_TRANSACTION_LM  INDEX ( EVENT_ID );
COLLECT STATS ON CC_COBRA.CC_MONETARY_TRANSACTION_LM  INDEX ( AGRMNT_ID );


/*STEP 04: AGGREGATE DATA*/

DELETE FROM CC_COBRA.FR20_INTERCHANGE_ANALYSIS 
WHERE POSTED_MONTH IN (SELECT REPORT_DT FROM CC_COBRA.WK_FR20_REPORT_DATE);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

INSERT INTO CC_COBRA.FR20_INTERCHANGE_ANALYSIS
SELECT   
CCA.ORG_TX	
,AD.V_ORG 
,DC.REPORT_DT --THIS WILL BE A MONTH END DATE	
,TRAN.MRCHNT_CONTRY_CD	
,CASE WHEN CCA.CREDIT_CARD_LOGO_CD IN (100,110) AND C.CREDIT_CARD_LOGO_CD IN (100,110) THEN S.SCHEME
      WHEN CCA.CREDIT_CARD_LOGO_CD IN (100,110) THEN 'M' /*FORCE NON-CONFIRMED AMEX TXNS INTO MASTERCARD*/
      ELSE S.SCHEME	
      END AS SCHEME
,SUM(EVENT_AM) AS SUM_TRANS_AMT	
,COUNT(EVENT_AM) AS COUNT_TRANS	
            
FROM 		GDW_VIEWSX.CREDIT_CARD_AGREEMENT	CCA
JOIN        CC_COBRA.WK_FR20_REPORT_DATE DC
ON          DC.REPORT_DT BETWEEN CCA.SOURCE_START_DT AND CCA.SOURCE_END_DT-1		
JOIN		GDW_VIEWSX.AGREEMENT A
ON			CCA.AGRMNT_ID = A.AGRMNT_ID
AND         DC.REPORT_DT BETWEEN A.SOURCE_START_DT AND A.SOURCE_END_DT-1
AND			A.AGRMNT_EXPIRY_DT IS NULL
JOIN        CC_COBRA.FR14_PRODUCT_SCHEME S  
ON     		CCA.CREDIT_CARD_LOGO_CD = S.LOGO_VL
AND    		CCA.ORG_TX = S.ORG_TX  	
JOIN		CC_COBRA.CC_MONETARY_TRANSACTION_LM  TRAN
ON          CCA.AGRMNT_ID = TRAN.AGRMNT_ID
JOIN        CC_COBRA.TRNSCN_DERVTN_GROUPS TDG
ON          TRAN.EVENT_ACTVTY_CD = TDG.EVENT_ACTVTY_CD      
AND         TDG.TRNSCN_DERVTN_GRP = 'RETAIL'   
JOIN 		CC_COBRA.CC_AGREEMENT_ADDED_DATE AD
ON  		CCA.AGRMNT_ID = AD.AGRMNT_ID 
LEFT JOIN 	GDW_VIEWSX.CARD_EVENT CE
ON          TRAN.EVENT_ID = CE.EVENT_ID
LEFT JOIN   GDW_VIEWSX.CARD C
ON			CE.CARD_ID = C.CARD_ID
AND         C.SOURCE_END_DT = '3500/12/31'

GROUP BY	1,2,3,4,5
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

COLLECT STATS ON CC_COBRA.FR20_INTERCHANGE_ANALYSIS
INDEX ( ORG_TX ,V_ORG ,POSTED_MONTH ,
MRCHNT_CONTRY_CD ,SCHEME );

/*UPDATE THE LOG TABLE IF IT HAS RUN OK!*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'FR20'
;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT   
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'FR20';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'FR20'
;

.QUIT 0;

