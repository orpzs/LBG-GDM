/************************************************************************/
/*JOB:      C01J06 - BACS BT OUTS                                       */
/*VERSION:  C01J06 - lkup join fix.sql                                  */
/*DATE VERSION IMPLEMENTED: 2015-11-03                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*C01J06                                                                */
/*                                                                      */
/************************************************************************/


.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*STEP 02: INITIAL CHECKS TO SEE IF THIS JOB HAS ALREADY RUN SUCCESSFULLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J06';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'C01J06'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 01: INSERT BACS PAYMENTS BT OUTS INTO CC_COBRA TABLE*/

INSERT INTO CC_COBRA.CC_BT_OUT_TRANSACTION
SELECT 'B'
      ,A.AGRMNT_ID
      ,A.EVENT_ID
      ,A.RMTTNG_BANK_SORT_CD 
      ,A.RMTTNG_BANK_ACCONT_NO 
      ,A.SERIAL_NO
      ,A.ORGNTR_NM 
      ,A.EVENT_START_DT 
      ,A.EVENT_START_TM 
      ,A.EVENT_ACTVTY_CD 
      ,A.EVENT_CATGRY_CD 
      ,A.EVENT_STATUS_CD 
      ,A.EVENT_STATUS_REASON_CD 
      ,A.CHANNL_ID 
      ,A.EVENT_AM 
      ,A.EVENT_AM_TYPE_IN 
      ,A.START_DT 
      ,A.START_TM
      ,A.SOURCE_START_DT
      ,A.SOURCE_START_TM 
FROM GDW_VIEWS.CC_BACS_TRANSACTION A
JOIN CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP B

ON   (A.RMTTNG_BANK_SORT_CD = B.CARD_ISSUER_SORT_CD
AND  A.RMTTNG_BANK_ACCONT_NO = B.CARD_ISSUER_ACCONT_NO
AND  A.SOURCE_START_DT BETWEEN B.START_DT AND B.END_DT-1)

OR   (A.RMTTNG_BANK_SORT_CD = B.CARD_ISSUER_SORT_CD
AND  B.CARD_ISSUER_ACCONT_NO = 'XXX'
AND  A.SOURCE_START_DT BETWEEN B.START_DT AND B.END_DT-1) --VIRGIN - CODE CHANGED BY JM 20/10/2015. 

WHERE NOT EXISTS (
SELECT NULL
FROM CC_COBRA.CC_BT_OUT_TRANSACTION C
WHERE A.EVENT_ID = C.EVENT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

/*STEP 02: CHECK TO SEE IF ALL BACS BT OUT REFERENCE DATA HAS BEEN PICKED UP IE.*/
/*CHECK TO SEE IF ANY SORTCODE/ACCOUNT NUMBERS HAVE APPEARED THAT WE NEED TO INCLUDE IN REF DATA TABLE FROM THE BACS FILE*/

SELECT T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO, B.ORGNTR_NM, COUNT(*) AS VOLUME, SUM(B.EVENT_AM)
FROM
/*PULL IN SORT CODES/ACCOUNT NOS FROM ABOVE*/
(
		SELECT T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO
		FROM
		/*PULL IN SORT CODES/ACCOUNT NOS WHERE THERE ARE MORE THAN 250*/
		(
		SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO
		FROM
			/*FIND RECORDS WHERE THERE ARE ONLY A FEW FOR EACH AGRMNT_ID - EXCLUDES AGRMNT_ID PAYING IN MONTHLY AMOUNTS*/
			(
			SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO, AGRMNT_ID, COUNT(*) AS VOL, SUM(EVENT_AM) AS AMT
			FROM   GDW_VIEWS.CC_BACS_TRANSACTION
			WHERE EVENT_AM >= 100
			GROUP BY 1,2,3
			HAVING COUNT(*) < 5
			) A
		GROUP BY 1,2
		HAVING COUNT(*) > 250
		) T1
		
		JOIN GDW_VIEWS.CC_BACS_TRANSACTION B
		ON     T1.RMTTNG_BANK_SORT_CD = B.RMTTNG_BANK_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = B.RMTTNG_BANK_ACCONT_NO
		
		WHERE 
		/*EXCLUDE ONES THAT HAVE MORE THAN 250 EXAMPLES OF MULTIPLE PAYMENTS (>5)*/
		NOT EXISTS 
		(
		SELECT NULL
		FROM
		(
		SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO
		FROM
			/*FIND RECORDS WHERE THERE ARE ONLY A FEW FOR EACH AGRMNT_ID - EXCLUDES AGRMNT_ID PAYING IN MONTHLY AMOUNTS*/
			(
			SELECT RMTTNG_BANK_SORT_CD, RMTTNG_BANK_ACCONT_NO, AGRMNT_ID, COUNT(*) AS VOL, SUM(EVENT_AM) AS AMT
			FROM   GDW_VIEWS.CC_BACS_TRANSACTION
			WHERE EVENT_AM >= 100
			GROUP BY 1,2,3
			HAVING COUNT(*) >= 5
			) A
		GROUP BY 1,2
		HAVING COUNT(*) > 250
		) D
		WHERE     T1.RMTTNG_BANK_SORT_CD = D.RMTTNG_BANK_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = D.RMTTNG_BANK_ACCONT_NO
		)
		AND
		/*WHERE THE SORT CODE AND ACCOUNT NO DOES NOT EXIST IN THE LOOKUP*/
		NOT EXISTS (
		SELECT NULL
		FROM CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP C
		WHERE     T1.RMTTNG_BANK_SORT_CD = C.CARD_ISSUER_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = C.CARD_ISSUER_ACCONT_NO
		)
		
		AND		NOT EXISTS (
		SELECT NULL
		FROM CC_COBRA.WK_CC_ISSUER_SORT_CODE_REMOVE C2
		WHERE     T1.RMTTNG_BANK_SORT_CD = C2.CARD_ISSUER_SORT_CD
		AND    T1.RMTTNG_BANK_ACCONT_NO = C2.CARD_ISSUER_ACCONT_NO
		)

		
		GROUP BY T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO
		HAVING SUM(EVENT_AM)/COUNT(*) >=1000
) T1

JOIN GDW_VIEWS.CC_BACS_TRANSACTION B
ON     T1.RMTTNG_BANK_SORT_CD = B.RMTTNG_BANK_SORT_CD
AND    T1.RMTTNG_BANK_ACCONT_NO = B.RMTTNG_BANK_ACCONT_NO

GROUP BY T1.RMTTNG_BANK_SORT_CD,T1.RMTTNG_BANK_ACCONT_NO,B.ORGNTR_NM
ORDER BY 1,2,3
;

.IF ACTIVITYCOUNT <> 0 THEN .GOTO FOUNDERROR;


UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'C01J06'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT 
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'C01J06';

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'C01J06'
;

.QUIT 0;




