/************************************************************************/
/*JOB:      FR22 - TRANSACTION COUNTS                                   */
/*VERSION:  FR22v04 - MBNA Migration Update                        */
/*DATE VERSION IMPLEMENTED: 2019-02-24                                  */
/*DEPENDENCIES:                                                         */
/*C01J01                                                                */
/*C01J02                                                                */
/*C01J03                                                                */
/*C01J04                                                                */
/*FR09                                                                  */
/*FR14                                                                  */
/************************************************************************/

.SET ERRORLEVEL (2641,3603) SEVERITY 4, UNKNOWN SEVERITY 8

SET QUERY_BAND = 'ApplicationName=CC_Finance_daily_run;JobID=GRFD043;Worktype=TripleR;Version=LBG;' FOR SESSION;

DATABASE CC_COBRA;

/*STEP 01: CHECK PRIOR JOBS FOR COMPLETION*/

/*INITIAL CHECKS TO SEE IF DAILY LOAD IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J01';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;


/*CHECK TO SEE IF PROCESSING LAST WORKING DAY OF MONTH*/

SELECT * FROM CC_COBRA.GRID_REPORTS_CONTROL 
WHERE (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT) = PRIOR_WORKDAY_DT
AND WORKDAY_OF_MONTH = 1;

.IF ACTIVITYCOUNT = 0 THEN .GOTO SKIPJOB;


/*INITIAL CHECKS TO SEE IF CC_AGREEMENT_ADDED_DATE IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J02';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF TRNSCN_DERVTN_GROUPS IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J03';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF CC_EVENTS_TO_EXCLUDE IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'C01J04';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;


/*INITIAL CHECKS TO SEE IF FR09 IS SUCCESSFUL*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR09';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF FR14 IS SUCCESSFUL - ENSURE FEATURES ARE OK*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR14';

.IF ACTIVITYCOUNT = 0 THEN .GOTO GRIDERROR;

/*INITIAL CHECKS TO SEE IF THIS JOB HAS ALREADY RUN SUCCESSFULLY*/

SELECT * FROM CC_COBRA.CC_COBRA_LOAD_LOG 
WHERE CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
AND   GRID_LOAD_ID = 'FR22';

.IF ACTIVITYCOUNT <> 0 THEN .GOTO SKIPJOB;

/*STEP 02: CHECKS TO SEE IF WORKING DAY IS WD1 */

SELECT * FROM CC_COBRA.GRID_REPORTS_CONTROL 
WHERE (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT) = PRIOR_WORKDAY_DT
AND WORKDAY_OF_MONTH = 1;

.IF ACTIVITYCOUNT = 0 THEN .GOTO SKIPTOEND;

/*SET THE STATUS START DT/TM*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
FROM CC_COBRA.CC_COBRA_LOAD_STATUS A
SET RUN_ID = A.RUN_ID
,   LOAD_STATUS = 'I'
,   LOAD_START_DT = DATE
,   LOAD_START_TM = TIME
WHERE CC_COBRA.CC_COBRA_LOAD_LOG.GRID_LOAD_ID = 'FR22'
AND   A.RUN_STATUS = 'I'
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;


/*
CREATE TABLE CC_COBRA.WK_FR22_DATE_CONTROL (
REPORT_DT DATE
) UNIQUE PRIMARY INDEX(REPORT_DT);
*/


DELETE FROM CC_COBRA.WK_FR22_DATE_CONTROL ALL;

INSERT INTO CC_COBRA.WK_FR22_DATE_CONTROL
SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  

COLLECT STATS ON CC_COBRA.WK_FR22_DATE_CONTROL  INDEX(REPORT_DT);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  

SELECT * FROM CC_COBRA.WK_FR22_DATE_CONTROL;


/*STEP 1 - GET STATUSES FOR MONTH END*/

/*
CREATE TABLE CC_COBRA.WK_FR22_STATUS_BAL (
AGRMNT_ID INT
,ORG_TX CHAR(3) COMPRESS ('120','170','190','195')
,V_ORG CHAR(3) COMPRESS ('120','170','190','195')
,CREDIT_CARD_LOGO_CD SMALLINT COMPRESS (530 ,540 ,300 ,320 ,330 ,333 ,340 ,350 ,100 ,500 )
,ORIGNL_ADDED_DT DATE
,BC1 CHAR(1) COMPRESS (' ')
,BC2 CHAR(1) COMPRESS (' ')
,INT_STATUS CHAR(1) COMPRESS ('A','D','F','Z','T','8')
,EXT_STATUS CHAR(1) COMPRESS ('*','Z','A','B','I','E','F','L','U')
,MONTH_END_BAL DECIMAL(15,2) COMPRESS 0.00
,PPI_IND CHAR(1) COMPRESS ('Y','N')
,CHANNL_CD CHAR(1) COMPRESS ('D','I','O','G')
,REGION_ORGNSN_NM VARCHAR(100)
) UNIQUE PRIMARY INDEX(AGRMNT_ID);
*/

DELETE FROM CC_COBRA.WK_FR22_STATUS_BAL ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

INSERT INTO CC_COBRA.WK_FR22_STATUS_BAL
SELECT		
A.AGRMNT_ID
,CCA.ORG_TX
,A.V_ORG
,CCA.CREDIT_CARD_LOGO_CD
,A.ORIGNL_ADDED_DT
,COALESCE(STA.AGRMNT_STATUS_SUMMRY_VL,'')
,COALESCE(BC1.AGRMNT_STATUS_SUMMRY_VL,'')
,COALESCE(BC2.AGRMNT_STATUS_SUMMRY_VL,'')
,CASE 
	WHEN STA.AGRMNT_STATUS_SUMMRY_VL IN ('8','9','P','T','F') THEN '*' 
	WHEN STA.AGRMNT_STATUS_SUMMRY_VL IN ('Z') THEN 'Z' 
 	WHEN BC1.AGRMNT_STATUS_SUMMRY_VL IN ('A','B','C','Z','I','E','F','L','U') THEN BC1.AGRMNT_STATUS_SUMMRY_VL
 	WHEN BC1.AGRMNT_STATUS_SUMMRY_VL = 'S' THEN 'U'
 	WHEN BC1.AGRMNT_STATUS_SUMMRY_VL = 'T' THEN 'U'
 	WHEN BC1.AGRMNT_STATUS_SUMMRY_VL = 'W' THEN 'C' 
 	WHEN BC2.AGRMNT_STATUS_SUMMRY_VL IN ('A','B','C','Z','I','E','F','L','U') THEN BC2.AGRMNT_STATUS_SUMMRY_VL
 	WHEN BC2.AGRMNT_STATUS_SUMMRY_VL = 'S' THEN 'U'
 	WHEN BC2.AGRMNT_STATUS_SUMMRY_VL = 'T' THEN 'U'
 	WHEN BC2.AGRMNT_STATUS_SUMMRY_VL = 'W' THEN 'C' 
 	WHEN BC1.AGRMNT_STATUS_SUMMRY_VL IS NOT NULL THEN 'O'
 	WHEN BC2.AGRMNT_STATUS_SUMMRY_VL IS NOT NULL THEN 'O'
 	ELSE ' '
 END AS EXTERNAL_STATUS
,COALESCE(AB.BL_SUMMRY_AM,0)
,COALESCE(PPI.PPI_IND, 'N')
,CHL.CHANNL_CD
,CHL.REGION_ORGNSN_NM
FROM        CC_COBRA.CC_AGREEMENT_ADDED_DATE A
JOIN        CC_COBRA.WK_FR22_DATE_CONTROL DC
ON          A.ADDED_DT <= DC.REPORT_DT
AND         (A.PURGED_DT > DC.REPORT_DT
OR          A.PURGED_DT IS NULL)
JOIN        GDW_VIEWSX.CREDIT_CARD_AGREEMENT CCA
ON          A.AGRMNT_ID = CCA.AGRMNT_ID
AND         CCA.SOURCE_END_DT = '3500/12/31'
LEFT JOIN 	GDW_VIEWSX.AGREEMENT_STATUS_SUMMARY STA  
ON   		A.AGRMNT_ID = STA.AGRMNT_ID
AND  		STA.AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500026' /*L2BS-INTERNAL-STATUS*/
AND 		DC.REPORT_DT BETWEEN STA.SOURCE_START_DT AND STA.SOURCE_END_DT-1 
LEFT JOIN 	GDW_VIEWSX.AGREEMENT_STATUS_SUMMARY BC1
ON  		A.AGRMNT_ID = BC1.AGRMNT_ID
AND  		BC1.AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500023' /*L2BS-BLOCK-CODE1*/
AND  		DC.REPORT_DT BETWEEN BC1.SOURCE_START_DT AND BC1.SOURCE_END_DT-1
LEFT JOIN 	GDW_VIEWSX.AGREEMENT_STATUS_SUMMARY BC2
ON   		A.AGRMNT_ID = BC2.AGRMNT_ID
AND  		BC2.AGRMNT_STATUS_SUMMRY_TYPE_CD = '00500024' /*L2BS-BLOCK-CODE2*/
AND  		DC.REPORT_DT BETWEEN BC2.SOURCE_START_DT AND BC2.SOURCE_END_DT-1 
LEFT JOIN   GDW_VIEWSX.CC_AGREEMENT_BALANCE_SUMMARY AB
ON          A.AGRMNT_ID = AB.AGRMNT_ID
AND         AB.BL_SUMMRY_AM_CD = '00500003'
AND         DC.REPORT_DT BETWEEN AB.SOURCE_START_DT AND AB.SOURCE_END_DT-1 
LEFT JOIN
			(SELECT AGF.AGRMNT_ID
					,'Y' PPI_IND
			FROM	GDW_VIEWSX.AGREEMENT_FEATURE AGF      
			JOIN    CC_COBRA.WK_FR22_DATE_CONTROL DC
			ON      DC.REPORT_DT BETWEEN AGF.SOURCE_START_DT AND AGF.SOURCE_END_DT-1
			AND     AGF.FEATUR_ID IN (4504,4110) -- WILL ONLY WORK BACK TO MAY 2009
			JOIN	GDW_VIEWSX.AGREEMENT_FEATURE_STATUS AFSS 
			ON      AGF.AGRMNT_ID = AFSS.AGRMNT_ID                                         
			AND     AGF.FEATUR_ID = AFSS.FEATUR_ID
			AND 		DC.REPORT_DT BETWEEN AFSS.SOURCE_START_DT AND AFSS.SOURCE_END_DT-1
			AND 	AFSS.AGRMNT_FEATUR_STATUS_TYPE_CD = '00000001'        
			AND     AFSS.AGRMNT_FEATUR_STATUS_CD = 'F'   
			GROUP BY 1,2
			) PPI
ON          A.AGRMNT_ID = PPI.AGRMNT_ID
LEFT JOIN	CC_COBRA.CC_AGREEMENT_CHANNEL CHL
ON          A.AGRMNT_ID = CHL.AGRMNT_ID
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 


COLLECT STATS ON CC_COBRA.WK_FR22_STATUS_BAL INDEX(AGRMNT_ID);

/*STEP 2: COLLECT MONTHS TRANSACTIONS*/

/* 
CREATE TABLE CC_COBRA.WK_FR22_MONTH_TXNS (
AGRMNT_ID INT
,ORG_TX CHAR(3) COMPRESS ('120','170','190','195')
,V_ORG CHAR(3) COMPRESS ('120','170','190','195')
,CREDIT_CARD_LOGO_CD SMALLINT COMPRESS (530 ,540 ,300 ,320 ,330 ,333 ,340 ,350 ,100 ,500 )
,ORIGNL_ADDED_DT DATE
,EVENT_ID BIGINT
,EVENT_AM DECIMAL(15,2) 
,SOURCE_START_DT DATE
,EVENT_ACTVTY_CD CHAR(10) COMPRESS ('00500001  ','00500002  ','00500176  ','00505101  ','00505107  ','00505109  ','00505125  ','00505138  ','00505243  ','00505913  ','00508053  ','00508102  ','00508110  ','00508112  ','00508138  ','00508175  ','00508908  ')
,TRNSCN_CRRNCY_CD CHAR(3) 
,TRNSCN_DERVTN_GRP VARCHAR(30) 
,MRCHNT_DS CHAR(40)
)
UNIQUE PRIMARY INDEX (EVENT_ID);
*/


DELETE FROM CC_COBRA.WK_FR22_MONTH_TXNS ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  

INSERT INTO CC_COBRA.WK_FR22_MONTH_TXNS
SELECT
MT.AGRMNT_ID
,CCA.ORG_TX
,A.V_ORG
,CCA.CREDIT_CARD_LOGO_CD
,A.ORIGNL_ADDED_DT
,MT.EVENT_ID
,MT.EVENT_AM
,MT.SOURCE_START_DT
,MT.EVENT_ACTVTY_CD
,MT.TRNSCN_CRRNCY_CD
,TDG.TRNSCN_DERVTN_GRP
,MT.MRCHNT_DS

FROM        GDW_VIEWS.CC_MONETARY_TRANSACTION_HIST MT
JOIN 		CC_COBRA.WK_FR22_DATE_CONTROL DC
ON          MT.SOURCE_START_DT/100 = DC.REPORT_DT/100
AND         NOT EXISTS 
            (SELECT NULL
             FROM CC_COBRA.CC_EVENTS_TO_EXCLUDE E
             WHERE MT.EVENT_ID = E.EVENT_ID)
JOIN        CC_COBRA.CC_AGREEMENT_ADDED_DATE A
ON          MT.AGRMNT_ID = A.AGRMNT_ID
JOIN        GDW_VIEWSX.CREDIT_CARD_AGREEMENT CCA
ON          A.AGRMNT_ID = CCA.AGRMNT_ID
AND         CCA.SOURCE_END_DT = '3500/12/31'
JOIN		CC_COBRA.TRNSCN_DERVTN_GROUPS TDG
ON 			MT.EVENT_ACTVTY_CD = TDG.EVENT_ACTVTY_CD
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  

COLLECT STATS ON CC_COBRA.WK_FR22_MONTH_TXNS INDEX(EVENT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  


/*COUNTS - REPLACEMENT FOR WD2*/
/*
CREATE TABLE CC_COBRA.WK_FR22_COUNTS (
AGRMNT_ID INT
,HERITAGE CHAR(4) COMPRESS ('LTSB','BOS','HCS','TSB','LB')
,ORG_TX CHAR(3) COMPRESS ('120','170','190','195')
,V_ORG CHAR(3) COMPRESS ('120','170','190','195')
,PRODUCT_GROUP_CD CHAR(9) COMPRESS ('DUO','TRUSTCARD','CLARITY','CORE')
,VINTAGE_GROUP_NO CHAR(7) COMPRESS ('Pre2010','2011','2012','2013')
,BALANC_TYPE_CD CHAR(6) COMPRESS 'TOTAL'
,PERIOD_END_DT DATE
,SCOPE CHAR(1) COMPRESS ('Y','N')
,GROSS_ACTIVE_CT BYTEINT COMPRESS (1, 0, NULL)
,DEBIT_ACTIVE_CT BYTEINT COMPRESS (1, 0, NULL)
,ALL_ACC_CT BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT BYTEINT COMPRESS (1, 0, NULL)
,ALL_CARD_CT SMALLINT COMPRESS (1, 0, NULL)
,PPI_GROSS_ACTIVE_CT BYTEINT COMPRESS (1, 0, NULL)
,PPI_DEBIT_ACTIVE_CT BYTEINT COMPRESS (1, 0, NULL)
,PPI_ACC_CT BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT_Branch BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT_Telephony BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT_Direct_Mail BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT_Digital_Owned BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT_Digital_Bought BYTEINT COMPRESS (1, 0, NULL)
,NEW_ACC_CT_Other BYTEINT COMPRESS (1, 0, NULL)
,PPI_NEW_ACC_CT_Branch BYTEINT COMPRESS (1, 0, NULL)
,PPI_NEW_ACC_CT_Telephony BYTEINT COMPRESS (1, 0, NULL)
,PPI_NEW_ACC_CT_Direct_Mail BYTEINT COMPRESS (1, 0, NULL)
,PPI_NEW_ACC_CT_Digital_Owned  BYTEINT COMPRESS (1, 0, NULL)
,PPI_NEW_ACC_CT_Digital_Bought BYTEINT COMPRESS (1, 0, NULL)
,PPI_NEW_ACC_CT_Other BYTEINT COMPRESS (1, 0, NULL)
) UNIQUE PRIMARY INDEX(AGRMNT_ID);
*/

DELETE FROM CC_COBRA.WK_FR22_COUNTS ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

INSERT INTO CC_COBRA.WK_FR22_COUNTS
SELECT 
A.AGRMNT_ID
,CASE WHEN A.V_ORG = '120' THEN 'LB'
      WHEN A.V_ORG = '190' THEN 'BOS'
      WHEN A.V_ORG = '195' THEN 'HCS'
      WHEN A.V_ORG = '170' THEN 'TSB'
	  WHEN A.V_ORG = '180' THEN 'MBN'
      ELSE 'OTHER'
 END AS HERITAGE 
,A.ORG_TX
,A.V_ORG
/* 24/02/2019 - Case statement updated to reflect current groupings		*/
/*,CASE WHEN A.CREDIT_CARD_LOGO_CD IN ('100','298','110','160','299') THEN 'DUO'
      WHEN A.CREDIT_CARD_LOGO_CD IN ('340','540') THEN 'TRUSTCARD'
      WHEN A.CREDIT_CARD_LOGO_CD IN ('332') THEN 'CLARITY'
      ELSE 'CORE'
 END AS PRODUCT_GROUP_CD */
,CASE WHEN A.ORG_TX IN ('120') AND A.CREDIT_CARD_LOGO_CD IN ('100','110','120','130','150','160','200','210','360','365')  THEN 'DUO'
      WHEN A.ORG_TX IN ('120') AND  A.CREDIT_CARD_LOGO_CD IN ('340','342', '540') THEN 'TRUSTCARD'
      WHEN A.ORG_TX IN ('190','195') AND  A.CREDIT_CARD_LOGO_CD IN  ('304','314','332') THEN 'CLARITY'
      ELSE 'CORE'
 END AS PRODUCT_GROUP_CD 
,CASE WHEN EXTRACT(YEAR FROM ORIGNL_ADDED_DT) < 2010 THEN 'Pre2010'
      ELSE CAST(EXTRACT(YEAR FROM ORIGNL_ADDED_DT) AS VARCHAR(7))
 END VINTAGE_GROUP_NO
,'TOTAL' AS BALANC_TYPE_CD
,DC.REPORT_DT AS PERIOD_END_DT
,CASE WHEN EXT_STATUS NOT IN ('C','L','U','Z') THEN 'Y'
      WHEN EXT_STATUS = 'C' AND MONTH_END_BAL < 0 THEN 'Y'
      ELSE 'N'
 END AS SCOPE 
,CASE WHEN SCOPE = 'Y' AND MONTH_END_BAL <> 0 THEN 1  --INCLUDES CREDIT BALANCES
      WHEN SCOPE = 'Y' AND GROSS_ACTIVE_IND = 1 THEN 1 --ANY TXN
      ELSE 0
 END AS GROSS_ACTIVE_CT
,CASE WHEN SCOPE = 'Y' AND DEBIT_ACTIVE_IND = 1 THEN 1 --ANY DEBIT ACTIVE TYPE TXN
      ELSE 0 
 END AS DEBIT_ACTIVE_CT
,CASE WHEN SCOPE = 'Y' THEN 1 
      ELSE 0 
 END AS ALL_ACC_CT
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 THEN 1
      ELSE 0 
 END AS NEW_ACC_CT 
 
,CASE WHEN SCOPE = 'Y' THEN ZEROIFNULL(AAS.AGRMNT_ACTVTY_QY)
      ELSE 0 
 END AS ALL_CARD_CT

,CASE WHEN PPI_IND = 'Y' AND GROSS_ACTIVE_CT = 1 THEN 1
      ELSE 0
 END AS PPI_GROSS_ACTIVE_CT
,CASE WHEN PPI_IND = 'Y' AND DEBIT_ACTIVE_CT = 1 THEN 1
      ELSE 0
 END AS PPI_DEBIT_ACTIVE_CT
,CASE WHEN PPI_IND = 'Y' AND SCOPE = 'Y' THEN 1
      ELSE 0
 END AS PPI_ACC_CT
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 
        AND CHANNL_CD = 'S' THEN 1 
      ELSE 0 
 END AS NEW_ACC_CT_Branch
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 
        AND CHANNL_CD = 'T' THEN 1 
      ELSE 0 
 END AS NEW_ACC_CT_Telephony
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 
        AND CHANNL_CD IN ('D','A','B') THEN 1 
      ELSE 0 
 END AS NEW_ACC_CT_Direct_Mail
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 
        AND CHANNL_CD IN ('G','I','E') THEN 1 
      ELSE 0 
 END AS NEW_ACC_CT_Digital_Owned    
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 
        AND CHANNL_CD IN ('C') THEN 1 
      ELSE 0 
 END AS NEW_ACC_CT_Digital_Bought  
,CASE WHEN SCOPE = 'Y' AND ORIGNL_ADDED_DT/100 = DC.REPORT_DT/100 
        AND CHANNL_CD IN ('O') THEN 1 
      ELSE 0 
 END AS NEW_ACC_CT_Other 
,0 AS PPI_NEW_ACC_CT_Branch
,0 AS PPI_NEW_ACC_CT_Telephony
,0 AS PPI_NEW_ACC_CT_Direct_Mail
,0 AS PPI_NEW_ACC_CT_Digital_Owned 
,0 AS PPI_NEW_ACC_CT_Digital_Bought
,0 AS PPI_NEW_ACC_CT_Other


FROM CC_COBRA.WK_FR22_STATUS_BAL A /*THIS TABLE HAS ONLY LIVE ACCOUNTS IN REPORTING MONTH*/
CROSS JOIN CC_COBRA.WK_FR22_DATE_CONTROL DC

LEFT JOIN
(
SELECT AGRMNT_ID, 1 AS GROSS_ACTIVE_IND
FROM CC_COBRA.WK_FR22_MONTH_TXNS
GROUP BY 1
) GAI /*GROSS_ACTIVE_IND*/
ON A.AGRMNT_ID = GAI.AGRMNT_ID

LEFT JOIN
(
SELECT TXN.AGRMNT_ID, 1 AS DEBIT_ACTIVE_IND
FROM CC_COBRA.WK_FR22_MONTH_TXNS TXN
JOIN CC_COBRA.TRNSCN_DERVTN_GROUPS LKUP
ON   TXN.EVENT_ACTVTY_CD = LKUP.EVENT_ACTVTY_CD
AND  LKUP.DEBIT_ACTIVE_IN = 1
GROUP BY 1
) DAI /*DEBIT_ACTIVE_IND*/
ON A.AGRMNT_ID = DAI.AGRMNT_ID

LEFT JOIN GDW_VIEWSX.AGREEMENT_ACTIVITY_SUMMARY AAS --20170626CA - changed from GRIDX_RETAIL
ON   A.AGRMNT_ID = AAS.AGRMNT_ID
AND  AAS.AGRMNT_ACTVTY_SUMMRY_TYPE_CD = '00500013' /*L2BS-NBR-UNBLKED-CARDS*/
AND  DC.REPORT_DT BETWEEN AAS.SOURCE_START_DT AND AAS.SOURCE_END_DT-1 
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 


COLLECT STATS ON CC_COBRA.WK_FR22_COUNTS  INDEX(AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 


/*STEP 2 - COLLECT CASH AND FR22_FEE_COUNTS SPEND COUNTS*/
/*
CREATE TABLE CC_COBRA.WK_FR22_FEE_COUNTS (
AGRMNT_ID INT 
,GROSS_LATE_FEE_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,LATE_FEE_REF_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,GROSS_LATE_FEES_CT INTEGER COMPRESS (0,1, NULL)
,LATE_FEE_REF_CT INTEGER COMPRESS (0,1, NULL)

,GROSS_OVRLMT_FEE_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,OVRLMT_FEE_REF_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,GROSS_OVRLMT_FEE_CT INTEGER COMPRESS (0,1, NULL)
,OVRLMT_FEE_REF_CT INTEGER COMPRESS (0,1, NULL)

,GROSS_RETPMT_FEE_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,RETPMT_FEE_REF_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,GROSS_RETPMT_FEE_CT INTEGER COMPRESS (0,1, NULL)
,RETPMT_FEE_REF_CT INTEGER COMPRESS (0,1, NULL)
)
UNIQUE PRIMARY INDEX(AGRMNT_ID);

*/


DELETE FROM CC_COBRA.WK_FR22_FEE_COUNTS ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  

INSERT INTO CC_COBRA.WK_FR22_FEE_COUNTS
SELECT
T.AGRMNT_ID
--GROSS_LATE_FEE_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'LATE FEE' AND TDG.REVRSL_IN = 0 THEN EVENT_AM ELSE 0 END)
--LATE_FEE_REF_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'LATE FEE' AND TDG.REVRSL_IN = 1 THEN EVENT_AM ELSE 0 END)
--GROSS_LATE_FEES_CT 
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'LATE FEE' AND TDG.REVRSL_IN = 0 THEN 1 ELSE 0 END)
--LATE_FEE_REF_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'LATE FEE' AND TDG.REVRSL_IN = 1 THEN 1 ELSE 0 END)

--GROSS_RETPMT_FEE_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'OVERLIMIT_FEE' AND TDG.REVRSL_IN = 0 THEN EVENT_AM ELSE 0 END)
--OVRLMT_FEE_REF_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'OVERLIMIT_FEE' AND TDG.REVRSL_IN = 1 THEN EVENT_AM ELSE 0 END)
--GROSS_OVRLMT_FEE_CT 
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'OVERLIMIT_FEE' AND TDG.REVRSL_IN = 0 THEN 1 ELSE 0 END)
--OVRLMT_FEE_REF_CT
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'OVERLIMIT_FEE' AND TDG.REVRSL_IN = 1 THEN 1 ELSE 0 END)

--GROSS_RETPMT_FEE_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'RETURNED PAYMENT FEE' AND TDG.REVRSL_IN = 0 THEN EVENT_AM ELSE 0 END)
--RETPMT_FEE_REF_AM
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'RETURNED PAYMENT FEE' AND TDG.REVRSL_IN = 1 THEN EVENT_AM ELSE 0 END)
--GROSS_RETPMT_FEE_CT 
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'RETURNED PAYMENT FEE' AND TDG.REVRSL_IN = 0 THEN 1 ELSE 0 END)
--RETPMT_FEE_REF_CT
,SUM(CASE WHEN T.TRNSCN_DERVTN_GRP = 'RETURNED PAYMENT FEE' AND TDG.REVRSL_IN = 1 THEN 1 ELSE 0 END)

FROM        CC_COBRA.WK_FR22_MONTH_TXNS T
JOIN        CC_COBRA.TRNSCN_DERVTN_GROUPS TDG
ON          T.EVENT_ACTVTY_CD = TDG.EVENT_ACTVTY_CD
WHERE       T.TRNSCN_DERVTN_GRP IN ('OVERLIMIT_FEE','LATE FEE','RETURNED PAYMENT FEE')
GROUP BY 1
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

COLLECT STATS ON CC_COBRA.WK_FR22_FEE_COUNTS  INDEX(AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

/*STEP 2 - COLLECT BTS IN */
/*
CREATE TABLE CC_COBRA.WK_FR22_BTS_IN (
AGRMNT_ID INT 
,BTIN_CT_Branch SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_Telephony SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_Direct_Mail SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_Digital_Owned SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_Digital_Bought SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_First_Data SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_Inbound_RCC SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_BT2CA SMALLINT COMPRESS (0,1, NULL)
,BTIN_CT_Other SMALLINT COMPRESS (0,1, NULL)
,BTIN_AM_Branch DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Telephony DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Direct_Mail DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Digital_Owned DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Digital_Bought DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_First_Data DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Inbound_RCC DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_BT2CA DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Other DECIMAL(15,2) COMPRESS (0, NULL)

)
UNIQUE PRIMARY INDEX(AGRMNT_ID);
*/

DELETE FROM CC_COBRA.WK_FR22_BTS_IN ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

INSERT INTO CC_COBRA.WK_FR22_BTS_IN
SELECT 	
T.AGRMNT_ID
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508021' THEN 1 ELSE 0 END) AS BTIN_CT_Branch
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508009' THEN 1 ELSE 0 END) AS BTIN_CT_Telephony
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508305' THEN 1 ELSE 0 END) AS BTIN_CT_Direct_Mail
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508017' THEN 1 ELSE 0 END) AS BTIN_CT_Digital_Owned
,SUM(0) AS BTIN_CT_Digital_Bought
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508013' THEN 1 ELSE 0 END) AS BTIN_CT_First_Data
,SUM(CASE WHEN T.EVENT_ACTVTY_CD IN ('00508025','0058005') THEN 1 ELSE 0 END) AS BTIN_CT_Inbound_RCC
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508323' THEN 1 ELSE 0 END) AS BTIN_CT_BT2CA
,SUM(CASE WHEN T.EVENT_ACTVTY_CD NOT IN ('00508021','00508009','00508305','00508017','00508013','00508025','0058005','00508323')
          THEN 1 
          ELSE 0 
     END) AS BTIN_CT_Other


,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508021' THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_Branch
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508009' THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_Telephony
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508305' THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_Direct_Mail
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508017' THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_Digital_Owned
,SUM(0) AS BTIN_CT_Digital_Bought
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508013' THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_First_Data
,SUM(CASE WHEN T.EVENT_ACTVTY_CD IN ('00508025','0058005') THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_Inbound_RCC
,SUM(CASE WHEN T.EVENT_ACTVTY_CD = '00508323' THEN T.EVENT_AM ELSE 0 END) AS BTIN_AM_BT2CA
,SUM(CASE WHEN T.EVENT_ACTVTY_CD NOT IN ('00508021','00508009','00508305','00508017','00508013','00508025','0058005','00508323')
          THEN T.EVENT_AM
          ELSE 0 
     END) AS BTIN_AM_Other
							
FROM        CC_COBRA.WK_FR22_MONTH_TXNS T
JOIN        CC_COBRA.TRNSCN_DERVTN_GROUPS TDG
ON          T.EVENT_ACTVTY_CD = TDG.EVENT_ACTVTY_CD
AND         T.TRNSCN_DERVTN_GRP IN ('BT')--EXCLUDE ONES ON BW
AND         T.EVENT_ACTVTY_CD NOT IN ('00506931','00506932')					
GROUP BY 1;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR;  

COLLECT STATS ON CC_COBRA.WK_FR22_BTS_IN  INDEX(AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

/*
CREATE TABLE CC_COBRA.WK_FR22_BTS_OUT (
AGRMNT_ID INT 
,BTOUT_CT_MBNA SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Barclays SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_RBS_Natwest SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_HSBC SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_EGG SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Capital_One SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_MS SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Santander SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Sainsburys SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Virgin SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Intra_LBG_Brand SMALLINT COMPRESS (0,1, NULL)
,BTOUT_CT_Other SMALLINT COMPRESS (0,1, NULL)
,BTOUT_AM_MBNA DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Barclays DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_RBS_Natwest DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_HSBC DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_EGG DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Capital_One DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_MS DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Santander DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Sainsburys DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Virgin DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Intra_LBG_Brand DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Other DECIMAL(15,2) COMPRESS (0, NULL)
)
UNIQUE PRIMARY INDEX(AGRMNT_ID);
*/

DELETE FROM CC_COBRA.WK_FR22_BTS_OUT ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 


INSERT INTO CC_COBRA.WK_FR22_BTS_OUT
SELECT 
T1.AGRMNT_ID
,SUM(CASE WHEN BT_OUT_CAT = 'MBNA' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_MBNA 
,SUM(CASE WHEN BT_OUT_CAT = 'Barclays' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Barclays 
,SUM(CASE WHEN BT_OUT_CAT = 'RBS_Natwest' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_RBS_Natwest 
,SUM(CASE WHEN BT_OUT_CAT = 'HSBC' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_HSBC 
,SUM(CASE WHEN BT_OUT_CAT = 'EGG' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_EGG 
,SUM(CASE WHEN BT_OUT_CAT = 'Capital_One' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Capital_One 
,SUM(CASE WHEN BT_OUT_CAT = 'MS' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_MS 
,SUM(CASE WHEN BT_OUT_CAT = 'Santander' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Santander 
,SUM(CASE WHEN BT_OUT_CAT = 'Sainsburys' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Sainsburys 
,SUM(CASE WHEN BT_OUT_CAT = 'Virgin' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Virgin 
,SUM(CASE WHEN BT_OUT_CAT = 'Intra_LBG_Brand ' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Intra_LBG_Brand 
,SUM(CASE WHEN BT_OUT_CAT = 'Other' THEN T1.VOL ELSE 0 END) AS BTOUT_CT_Other 

,SUM(CASE WHEN BT_OUT_CAT = 'MBNA' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_MBNA 
,SUM(CASE WHEN BT_OUT_CAT = 'Barclays' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Barclays 
,SUM(CASE WHEN BT_OUT_CAT = 'RBS_Natwest' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_RBS_Natwest 
,SUM(CASE WHEN BT_OUT_CAT = 'HSBC' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_HSBC 
,SUM(CASE WHEN BT_OUT_CAT = 'EGG' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_EGG 
,SUM(CASE WHEN BT_OUT_CAT = 'Capital_One' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Capital_One 
,SUM(CASE WHEN BT_OUT_CAT = 'MS' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_MS 
,SUM(CASE WHEN BT_OUT_CAT = 'Santander' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Santander 
,SUM(CASE WHEN BT_OUT_CAT = 'Sainsburys' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Sainsburys 
,SUM(CASE WHEN BT_OUT_CAT = 'Virgin' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Virgin 
,SUM(CASE WHEN BT_OUT_CAT = 'Intra_LBG_Brand ' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Intra_LBG_Brand 
,SUM(CASE WHEN BT_OUT_CAT = 'Other' THEN T1.VAL ELSE 0 END) AS BTOUT_AM_Other 

FROM 
(SELECT 
T.AGRMNT_ID
,CASE WHEN CARD_ISSUER_NM IN ('MBNA','MBNA EUROPE BANK') THEN 'MBNA'
      WHEN CARD_ISSUER_NM = 'BARCLAYCARD' THEN 'Barclays'
      WHEN CARD_ISSUER_NM = 'RBS/NAT WEST' THEN 'RBS_Natwest'
      WHEN CARD_ISSUER_NM = 'HSBC' THEN 'HSBC'
      WHEN CARD_ISSUER_NM = 'EGG' THEN 'EGG'
      WHEN CARD_ISSUER_NM = 'CAPITAL ONE' THEN 'Capital_One'
      WHEN CARD_ISSUER_NM IN ('MARKS & SPENCER','MARKS AND SPENCER') THEN 'MS'
      WHEN CARD_ISSUER_NM = 'SANTANDER' THEN 'Santander'
      WHEN CARD_ISSUER_NM = 'SAINSBURYS' THEN 'Sainsburys'
      WHEN CARD_ISSUER_NM = 'VIRGIN VISA' THEN 'Virgin'
      WHEN CARD_ISSUER_NM IN ('HBOS','LLOYDS TSB','BANK OF SCOTLAND') THEN 'Intra_LBG_Brand'
      ELSE 'Other' 
 END AS BT_OUT_CAT 
,COUNT(*) AS VOL
,SUM(T.EVENT_AM) AS VAL 


FROM CC_COBRA.WK_FR22_MONTH_TXNS T
JOIN CC_COBRA.CC_BT_OUT_CNFRMD_TRANSACTION C
ON   T.EVENT_ID = C.CC_MON_TXN_EVENT_ID
JOIN CC_COBRA.CC_BT_OUT_TRANSACTION CCBT
ON  CCBT.EVENT_ID = C.BACS_FP_EVENT_ID
INNER JOIN CC_COBRA.CC_ISSUER_SORT_CODE_LOOKUP B	
ON CCBT.RMTTNG_BANK_SORT_CD = B.CARD_ISSUER_SORT_CD	
AND CCBT.RMTTNG_BANK_ACCONT_NO = B.CARD_ISSUER_ACCONT_NO
GROUP BY 1,2
) T1	
GROUP BY 1
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

COLLECT STATS ON CC_COBRA.WK_FR22_BTS_OUT  INDEX(AGRMNT_ID);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

/*CREATE FINAL AGG TABLE*/

/*
CREATE TABLE CC_COBRA.FR22_BW_SUPPLEMENTS (
HERITAGE CHAR(4) COMPRESS ('LTSB','BOS','HCS','TSB','LB')
,ORG_TX CHAR(3)
,V_ORG CHAR(3)
,PRODUCT_GROUP_CD VARCHAR(9)
,VINTAGE_GROUP_NO VARCHAR(7)
,BALANC_TYPE_CD CHAR(6) COMPRESS 'TOTAL'
,PERIOD_END_DT DATE
,GROSS_ACTIVE_CT INT COMPRESS (0, NULL)
,DEBIT_ACTIVE_CT INT COMPRESS (0, NULL)
,ALL_ACC_CT INT COMPRESS (0, NULL)
,NEW_ACC_CT INT COMPRESS (0, NULL)
,ALL_CARD_CT INT COMPRESS (0, NULL)
,PPI_GROSS_ACTIVE_CT INT COMPRESS (0, NULL)
,PPI_DEBIT_ACTIVE_CT INT COMPRESS (0, NULL)
,PPI_ACC_CT INT COMPRESS (0, NULL)
,NEW_ACC_CT_Branch INT COMPRESS (0, NULL)
,NEW_ACC_CT_Telephony INT COMPRESS (0, NULL)
,NEW_ACC_CT_Direct_Mail INT COMPRESS (0, NULL)
,NEW_ACC_CT_Digital_Owned INT COMPRESS (0, NULL)
,NEW_ACC_CT_Digital_Bought INT COMPRESS (0, NULL)
,NEW_ACC_CT_Other INT COMPRESS (0, NULL)
,PPI_NEW_ACC_CT_Branch INT COMPRESS (0, NULL)
,PPI_NEW_ACC_CT_Telephony INT COMPRESS (0, NULL)
,PPI_NEW_ACC_CT_Direct_Mail INT COMPRESS (0, NULL)
,PPI_NEW_ACC_CT_Digital_Owned  INT COMPRESS (0, NULL)
,PPI_NEW_ACC_CT_Digital_Bought INT COMPRESS (0, NULL)
,PPI_NEW_ACC_CT_Other INT COMPRESS (0, NULL)
,GROSS_LATE_FEE_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,LATE_FEE_REF_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,GROSS_LATE_FEES_CT INT COMPRESS (0, NULL)
,LATE_FEE_REF_CT INT COMPRESS (0, NULL)
,GROSS_OVRLMT_FEE_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,OVRLMT_FEE_REF_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,GROSS_OVRLMT_FEE_CT INT COMPRESS (0, NULL)
,OVRLMT_FEE_REF_CT INT COMPRESS (0, NULL)
,GROSS_RETPMT_FEE_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,RETPMT_FEE_REF_AM DECIMAL(15,2) COMPRESS (0,12.00,NULL)
,GROSS_RETPMT_FEE_CT INT COMPRESS (0, NULL)
,RETPMT_FEE_REF_CT INT COMPRESS (0, NULL)
,BTIN_CT_Branch INT COMPRESS (0, NULL)
,BTIN_CT_Telephony INT COMPRESS (0, NULL)
,BTIN_CT_Direct_Mail INT COMPRESS (0, NULL)
,BTIN_CT_Digital_Owned INT COMPRESS (0, NULL)
,BTIN_CT_Digital_Bought INT COMPRESS (0, NULL)
,BTIN_CT_First_Data INT COMPRESS (0, NULL)
,BTIN_CT_Inbound_RCC INT COMPRESS (0, NULL)
,BTIN_CT_BT2CA INT COMPRESS (0, NULL)
,BTIN_CT_Other INT COMPRESS (0, NULL)
,BTIN_AM_Branch DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Telephony DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Direct_Mail DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Digital_Owned DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Digital_Bought DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_First_Data DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Inbound_RCC DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_BT2CA DECIMAL(15,2) COMPRESS (0, NULL)
,BTIN_AM_Other DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_CT_MBNA INT COMPRESS (0, NULL)
,BTOUT_CT_Barclays INT COMPRESS (0, NULL)
,BTOUT_CT_RBS_Natwest INT COMPRESS (0, NULL)
,BTOUT_CT_HSBC INT COMPRESS (0, NULL)
,BTOUT_CT_EGG INT COMPRESS (0, NULL)
,BTOUT_CT_Capital_One INT COMPRESS (0, NULL)
,BTOUT_CT_MS INT COMPRESS (0, NULL)
,BTOUT_CT_Santander INT COMPRESS (0, NULL)
,BTOUT_CT_Sainsburys INT COMPRESS (0, NULL)
,BTOUT_CT_Virgin INT COMPRESS (0, NULL)
,BTOUT_CT_Intra_LBG_Brand INT COMPRESS (0, NULL)
,BTOUT_CT_Other INT COMPRESS (0, NULL)
,BTOUT_AM_MBNA DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Barclays DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_RBS_Natwest DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_HSBC DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_EGG DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Capital_One DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_MS DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Santander DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Sainsburys DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Virgin DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Intra_LBG_Brand DECIMAL(15,2) COMPRESS (0, NULL)
,BTOUT_AM_Other DECIMAL(15,2) COMPRESS (0, NULL)
) PRIMARY INDEX(
ORG_TX
,V_ORG 
,PRODUCT_GROUP_CD 
,VINTAGE_GROUP_NO 
,PERIOD_END_DT 
);

*/

DELETE FROM  CC_COBRA.FR22_BW_SUPPLEMENTS WHERE PERIOD_END_DT IN (
SELECT REPORT_DT FROM CC_COBRA.WK_FR22_DATE_CONTROL);

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

INSERT INTO CC_COBRA.FR22_BW_SUPPLEMENTS
SELECT       
A.HERITAGE
,A.ORG_TX
,A.V_ORG
,A.PRODUCT_GROUP_CD
,A.VINTAGE_GROUP_NO
,A.BALANC_TYPE_CD
,A.PERIOD_END_DT

,SUM(ZEROIFNULL(	GROSS_ACTIVE_CT	))
,SUM(ZEROIFNULL(	DEBIT_ACTIVE_CT	))
,SUM(ZEROIFNULL(	ALL_ACC_CT	))
,SUM(ZEROIFNULL(	NEW_ACC_CT	))
,SUM(ZEROIFNULL(	ALL_CARD_CT	))
,SUM(ZEROIFNULL(	PPI_GROSS_ACTIVE_CT	))
,SUM(ZEROIFNULL(	PPI_DEBIT_ACTIVE_CT	))
,SUM(ZEROIFNULL(	PPI_ACC_CT	))
,SUM(ZEROIFNULL(	NEW_ACC_CT_Branch	))
,SUM(ZEROIFNULL(	NEW_ACC_CT_Telephony	))
,SUM(ZEROIFNULL(	NEW_ACC_CT_Direct_Mail	))
,SUM(ZEROIFNULL(	NEW_ACC_CT_Digital_Owned	))
,SUM(ZEROIFNULL(	NEW_ACC_CT_Digital_Bought	))
,SUM(ZEROIFNULL(	NEW_ACC_CT_Other	))
,SUM(ZEROIFNULL(	PPI_NEW_ACC_CT_Branch	))
,SUM(ZEROIFNULL(	PPI_NEW_ACC_CT_Telephony	))
,SUM(ZEROIFNULL(	PPI_NEW_ACC_CT_Direct_Mail	))
,SUM(ZEROIFNULL(	PPI_NEW_ACC_CT_Digital_Owned	))
,SUM(ZEROIFNULL(	PPI_NEW_ACC_CT_Digital_Bought	))
,SUM(ZEROIFNULL(	PPI_NEW_ACC_CT_Other	))
,SUM(ZEROIFNULL(	GROSS_LATE_FEE_AM	))
,SUM(ZEROIFNULL(	LATE_FEE_REF_AM	))
,SUM(ZEROIFNULL(	GROSS_LATE_FEES_CT	))
,SUM(ZEROIFNULL(	LATE_FEE_REF_CT	))
,SUM(ZEROIFNULL(	GROSS_OVRLMT_FEE_AM	))
,SUM(ZEROIFNULL(	OVRLMT_FEE_REF_AM	))
,SUM(ZEROIFNULL(	GROSS_OVRLMT_FEE_CT	))
,SUM(ZEROIFNULL(	OVRLMT_FEE_REF_CT	))
,SUM(ZEROIFNULL(	GROSS_RETPMT_FEE_AM	))
,SUM(ZEROIFNULL(	RETPMT_FEE_REF_AM	))
,SUM(ZEROIFNULL(	GROSS_RETPMT_FEE_CT	))
,SUM(ZEROIFNULL(	RETPMT_FEE_REF_CT	))
,SUM(ZEROIFNULL(	BTIN_CT_Branch	))
,SUM(ZEROIFNULL(	BTIN_CT_Telephony	))
,SUM(ZEROIFNULL(	BTIN_CT_Direct_Mail	))
,SUM(ZEROIFNULL(	BTIN_CT_Digital_Owned	))
,SUM(ZEROIFNULL(	BTIN_CT_Digital_Bought	))
,SUM(ZEROIFNULL(	BTIN_CT_First_Data	))
,SUM(ZEROIFNULL(	BTIN_CT_Inbound_RCC	))
,SUM(ZEROIFNULL(	BTIN_CT_BT2CA	))
,SUM(ZEROIFNULL(	BTIN_CT_Other	))
,SUM(ZEROIFNULL(	BTIN_AM_Branch	))
,SUM(ZEROIFNULL(	BTIN_AM_Telephony	))
,SUM(ZEROIFNULL(	BTIN_AM_Direct_Mail	))
,SUM(ZEROIFNULL(	BTIN_AM_Digital_Owned	))
,SUM(ZEROIFNULL(	BTIN_AM_Digital_Bought	))
,SUM(ZEROIFNULL(	BTIN_AM_First_Data	))
,SUM(ZEROIFNULL(	BTIN_AM_Inbound_RCC	))
,SUM(ZEROIFNULL(	BTIN_AM_BT2CA	))
,SUM(ZEROIFNULL(	BTIN_AM_Other	))
,SUM(ZEROIFNULL(	BTOUT_CT_MBNA	))
,SUM(ZEROIFNULL(	BTOUT_CT_Barclays	))
,SUM(ZEROIFNULL(	BTOUT_CT_RBS_Natwest	))
,SUM(ZEROIFNULL(	BTOUT_CT_HSBC	))
,SUM(ZEROIFNULL(	BTOUT_CT_EGG	))
,SUM(ZEROIFNULL(	BTOUT_CT_Capital_One	))
,SUM(ZEROIFNULL(	BTOUT_CT_MS	))
,SUM(ZEROIFNULL(	BTOUT_CT_Santander	))
,SUM(ZEROIFNULL(	BTOUT_CT_Sainsburys	))
,SUM(ZEROIFNULL(	BTOUT_CT_Virgin	))
,SUM(ZEROIFNULL(	BTOUT_CT_Intra_LBG_Brand	))
,SUM(ZEROIFNULL(	BTOUT_CT_Other	))
,SUM(ZEROIFNULL(	BTOUT_AM_MBNA	))
,SUM(ZEROIFNULL(	BTOUT_AM_Barclays	))
,SUM(ZEROIFNULL(	BTOUT_AM_RBS_Natwest	))
,SUM(ZEROIFNULL(	BTOUT_AM_HSBC	))
,SUM(ZEROIFNULL(	BTOUT_AM_EGG	))
,SUM(ZEROIFNULL(	BTOUT_AM_Capital_One	))
,SUM(ZEROIFNULL(	BTOUT_AM_MS	))
,SUM(ZEROIFNULL(	BTOUT_AM_Santander	))
,SUM(ZEROIFNULL(	BTOUT_AM_Sainsburys	))
,SUM(ZEROIFNULL(	BTOUT_AM_Virgin	))
,SUM(ZEROIFNULL(	BTOUT_AM_Intra_LBG_Brand	))
,SUM(ZEROIFNULL(	BTOUT_AM_Other	))

FROM       CC_COBRA.WK_FR22_COUNTS A
LEFT JOIN  CC_COBRA.WK_FR22_FEE_COUNTS B
ON         A.AGRMNT_ID = B.AGRMNT_ID
LEFT JOIN  CC_COBRA.WK_FR22_BTS_IN C
ON         A.AGRMNT_ID = C.AGRMNT_ID
LEFT JOIN  CC_COBRA.WK_FR22_BTS_OUT D
ON         A.AGRMNT_ID = D.AGRMNT_ID
GROUP BY 1,2,3,4,5,6,7
;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

DELETE FROM CC_COBRA.WK_FR22_COUNTS ALL;
DELETE FROM CC_COBRA.WK_FR22_FEE_COUNTS ALL;
DELETE FROM CC_COBRA.WK_FR22_BTS_IN ALL;
DELETE FROM CC_COBRA.WK_FR22_BTS_OUT ALL;
DELETE FROM CC_COBRA.WK_FR22_STATUS_BAL ALL;
DELETE FROM CC_COBRA.WK_FR22_MONTH_TXNS ALL;

.IF ERRORCODE <> 0 THEN .GOTO FOUNDERROR; 

/*UPDATE THE LOG TABLE IF IT HAS RUN OK!*/

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  CURRENT_LOAD_DT = (SELECT START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , CURRENT_BUS_DT = (SELECT SOURCE_START_DT FROM CC_COBRA.CC_COBRA_LOAD_START_DT)
   , UPDATE_DT = DATE
   , UPDATE_TM = TIME
   , LOAD_STATUS = 'C'
WHERE GRID_LOAD_ID = 'FR22'
;

SELECT GRID_LOAD_ID, CURRENT_BUS_DT, CURRENT_LOAD_DT   
FROM CC_COBRA.CC_COBRA_LOAD_LOG WHERE GRID_LOAD_ID = 'FR22';

.QUIT;

.LABEL SKIPTOEND;

.QUIT;

.LABEL SKIPJOB;

.QUIT;

.LABEL GRIDERROR;

.QUIT;

.LABEL FOUNDERROR;

UPDATE CC_COBRA.CC_COBRA_LOAD_LOG
SET  LOAD_STATUS = 'F'
WHERE GRID_LOAD_ID = 'FR22'
;

.QUIT 0;



